{"version":3,"sources":["webpack:///./src/app/pages/edit-weight/edit-weight.module.ts","webpack:///./src/app/pages/edit-weight/edit-weight.page.html","webpack:///./src/app/pages/edit-weight/edit-weight.page.scss","webpack:///./src/app/pages/edit-weight/edit-weight.page.ts","webpack:///./src/app/services/errors/errors.service.ts","webpack:///./src/app/services/weights/weights.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AACV;AACO;AACyB;AAE7E,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gEAAc;KAC1B;CACF,CAAC;AAaF;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAXhC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,kEAAmB;gBACnB,qFAAc;aACf;YACD,YAAY,EAAE,CAAC,gEAAc,CAAC;SAC/B,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;AC1BjC,slCAAslC,oDAAoD,mhB;;;;;;;;;;;ACA1oC,+BAA+B,qBAAqB,iBAAiB,EAAE,4BAA4B,gCAAgC,sBAAsB,EAAE,aAAa,kBAAkB,mCAAmC,wBAAwB,EAAE,+CAA+C,2zB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApP;AAC8B;AACZ;AACF;AACgB;AACb;AACpB;AACmD;AAOpG;IAOE,wBACU,OAAsB,EACtB,YAA0B,EAC1B,aAA6B,EAC7B,WAA8B,EAC/B,YAA2B,EAC1B,KAAqB,EACrB,YAAmC;QANnC,YAAO,GAAP,OAAO,CAAe;QACtB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,kBAAa,GAAb,aAAa,CAAgB;QAC7B,gBAAW,GAAX,WAAW,CAAmB;QAC/B,iBAAY,GAAZ,YAAY,CAAe;QAC1B,UAAK,GAAL,KAAK,CAAgB;QACrB,iBAAY,GAAZ,YAAY,CAAuB;QAXtC,uBAAkB,GAAG,KAAK,CAAC;IAalC,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAeC;QAbC,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC1B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC;gBACnB,yDAAU,CAAC,GAAG,CAAC,EAAE,CAAC;aACnB,CAAC;SACH,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,eAAK;YAClD,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACK,uCAAc,GAAtB,UAAuB,KAAU;QAC/B,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBAClD,SAAS,EAAE,KAAK;aACjB,CAAC,CAAC;SACJ;IACH,CAAC;IAEM,8BAAK,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IAED;;OAEG;IACU,qCAAY,GAAzB;;;;;4BACiB,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;4BAC3C,OAAO,EAAE,iBAAiB;yBAC3B,CAAC;;wBAFI,MAAM,GAAG,SAEb;wBACF,qBAAM,MAAM,CAAC,OAAO,EAAE;;wBAAtB,SAAsB,CAAC;;;;wBAGrB,SAAI;wBAAkB,qBAAM,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;;wBAA1G,GAAK,MAAM,IAAW,SAAoF,EAAC;wBAC3G,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;wBAC7B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;wBACzD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;;;;wBAE3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,GAAC,CAAC,CAAC,CAAC;;;wBAEzD,MAAM,CAAC,OAAO,EAAE,CAAC;;;;;;KAEpB;IAED;;OAEG;IACU,qCAAY,GAAzB;;;;;4BACiB,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;4BAC3C,OAAO,EAAE,iBAAiB;yBAC3B,CAAC;;wBAFI,MAAM,GAAG,SAEb;wBACF,qBAAM,MAAM,CAAC,OAAO,EAAE;;wBAAtB,SAAsB,CAAC;;;;wBAGrB,SAAI;wBAAkB,qBAAM,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;;wBAA3E,GAAK,MAAM,IAAW,SAAqD,EAAC;wBAC5E,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;wBAC7B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;wBACzD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;;;;wBAE3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,GAAC,CAAC,CAAC,CAAC;;;wBAEzD,MAAM,CAAC,OAAO,EAAE,CAAC;;;;;;KAEpB;IAED;;OAEG;IACW,oCAAW,GAAzB;;;;;;wBACQ,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;wBAEhC,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gCAC3C,OAAO,EAAE,iBAAiB;6BAC3B,CAAC;;wBAFI,MAAM,GAAG,SAEb;wBAEF,qBAAM,MAAM,CAAC,OAAO,EAAE;;wBAAtB,SAAsB,CAAC;;;;wBAGrB,SAAI;wBAAkB,qBAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC;;wBAAlE,GAAK,MAAM,IAAW,SAA4C,EAAC;;;;wBAEnE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,GAAC,CAAC,CAAC,CAAC;;;wBAEzD,MAAM,CAAC,OAAO,EAAE,CAAC;;;;;;KAEpB;IAlHU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,iHAAsC;;SAEvC,CAAC;yCASmB,4DAAa;YACR,0FAAY;YACX,gFAAc;YAChB,gEAAiB;YACjB,6EAAa;YACnB,8DAAc;YACP,4GAAqB;OAdlC,cAAc,CAoH1B;IAAD,qBAAC;CAAA;AApH0B;;;;;;;;;;;;;;;;;;;;;;;;;ACdgB;AAiB3C;IAEE;IACA,CAAC;IAED,mCAAmC;IAC5B,kCAAU,GAAjB,UAAkB,IAAmC;QACnD,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YAC/B,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,OAAO,EAAE;YACvB,OAAO,QAAQ,CAAC;SACjB;aAAM;YACL,OAAO,MAAM,CAAC;SACf;IACH,CAAC;IAED,mCAAmC;IACnC;;;;OAIG;IACI,kCAAU,GAAjB,UAAkB,MAAmB;QACnC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,EAAE,CAAC;SACX;QAED,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACtC,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IAED,mCAAmC;IACnC;;;;OAIG;IACI,mCAAW,GAAlB,UAAmB,GAAW,EAAE,MAAmB;QACjD,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,EAAE,CAAC;SACX;QACD,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;YACnC,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACzB;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,mCAAmC;IACnC;;;;OAIG;IACI,wCAAgB,GAAvB,UAAwB,GAAW,EAAE,MAAmB;QACtD,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,EAAE,CAAC;SACX;QAED,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;YACnC,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/B,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAC5B;SACF;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,mCAAmC;IACnC;;;;OAIG;IACI,mCAAW,GAAlB,UAAmB,GAAW,EAAE,MAAmB;QAEjD,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,KAAK,CAAC;SACd;QAED,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;YACnC,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;SACpC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED,mCAAmC;IACnC;;;OAGG;IACI,gCAAQ,GAAf,UAAgB,MAAmB;QAEjC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,KAAK,CAAC;SACd;QAED,KAAK,IAAM,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE;YAC7B,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/B,OAAO,IAAI,CAAC;aACb;SACF;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;;OAGG;IACI,8BAAM,GAAb,UAAc,MAAmB;QAC/B,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,CAAC,CAAC,CAAC;SACX;QACD,OAAO,MAAM,CAAC,MAAM,CAAC;IACvB,CAAC;IAEM,+CAAuB,GAA9B,UAA+B,KAAwB,EAAE,cAA8B;QAA9B,sDAA8B;QACrF,IAAM,SAAS,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;QAEtF,IAAI,cAAc,IAAI,SAAS,KAAK,KAAK,EAAE;YACzC,MAAM,KAAK,CAAC;SACb;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IA9HU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,aAAa,CA+HzB;IAAD,oBAAC;CAAA;AA/HyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBiB;AACQ;AACD;AACjB;AAGS;AAa1C;IAAoC,kCAAW;IAE7C,wBAAsB,IAAgB,EAAY,QAAkB;QAApE,YACE,kBAAM,IAAI,EAAE,QAAQ,CAAC,SAEtB;QAHqB,UAAI,GAAJ,IAAI,CAAY;QAAY,cAAQ,GAAR,QAAQ,CAAU;QAElE,gBAAc,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;;IACxC,CAAC;uBALU,cAAc;IAOzB;;OAEG;IACI,qCAAY,GAAnB;QAAA,iBAKC;QAJC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,gBAAc,CAAC,GAAG,CAAC,kBAAkB,CAAC,EAAE,gBAAc,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACzG,SAAS,EAAE;aACX,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAxD,CAAwD,CAAC;aACxE,KAAK,CAAC,gBAAc,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IAED;;;OAGG;IACI,mCAAU,GAAjB,UAAkB,MAAc;QAAhC,iBAMC;QALC,IAAM,IAAI,GAAG,EAAC,MAAM,UAAC,CAAC;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAgB,gBAAc,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,gBAAc,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAChH,SAAS,EAAE;aACX,IAAI,CAAC,mBAAS,IAAI,YAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,EAApC,CAAoC,CAAC;aACvD,KAAK,CAAC,gBAAc,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IAED;;OAEG;IACI,oCAAW,GAAlB;QAAA,iBAKC;QAJC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,gBAAc,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,gBAAc,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACpG,SAAS,EAAE;aACX,IAAI,CAAC,iBAAO,IAAI,cAAO,CAAC,GAAG,CAAC,gBAAM,IAAI,YAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,EAAjC,CAAiC,CAAC,EAAxD,CAAwD,CAAC;aACzE,KAAK,CAAC,gBAAc,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IAED;;;OAGG;IACK,6CAAoB,GAA5B,UAA6B,MAAqB;QAChD,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,MAAM,CAAC,SAAS,GAAG,0CAAU,CAAC,MAAM,CAAC,SAAS,EAAE,qBAAqB,EAAE,IAAI,CAAC,CAAC;SAC9E;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,qCAAY,GAAnB,UAAoB,EAAU,EAAE,MAAc;QAA9C,iBAKC;QAJC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,gBAAc,CAAC,GAAG,CAAC,eAAa,EAAI,CAAC,EAAE,EAAC,MAAM,UAAC,EAAE,gBAAc,CAAC,WAAW,EAAE,CAAC;aACxG,SAAS,EAAE;aACX,IAAI,CAAC,mBAAS,IAAI,YAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,EAApC,CAAoC,CAAC;aACvD,KAAK,CAAC,gBAAc,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IAED;;;OAGG;IACI,qCAAY,GAAnB,UAAoB,EAAU;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAc,CAAC,GAAG,CAAC,eAAa,EAAI,CAAC,EAAE,gBAAc,CAAC,WAAW,EAAE,CAAC;aACzF,SAAS,EAAE;aACX,KAAK,CAAC,gBAAc,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IAEO,yCAAgB,GAAxB,UAAyB,MAAoB;QAC3C,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;YAC/B,OAAO,MAAM,CAAC;SACf;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;OAGG;IACI,kCAAS,GAAhB,UAAiB,EAAU;QAA3B,iBAKC;QAJC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,gBAAc,CAAC,GAAG,CAAC,eAAa,EAAI,CAAC,EAAE,gBAAc,CAAC,WAAW,EAAE,CAAC;aAC9F,SAAS,EAAE;aACX,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,EAAjC,CAAiC,CAAC;aACjD,KAAK,CAAC,gBAAc,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;;IA1FU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG4B,+DAAU,EAAsB,uDAAQ;OAFzD,cAAc,CA2F1B;IAAD,qBAAC;CAAA,CA3FmC,8DAAW,GA2F9C;AA3F0B","file":"pages-edit-weight-edit-weight-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { EditWeightPage } from './edit-weight.page';\r\nimport { SideMenuModule } from '../../components/side-menu/side-menu.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EditWeightPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n    SideMenuModule\r\n  ],\r\n  declarations: [EditWeightPage]\r\n})\r\nexport class EditWeightPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Edit Weigh-In</ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <app-menu-button></app-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"close()\\\">\\r\\n      <ion-icon name=\\\"close\\\"></ion-icon>\\r\\n    </ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content *ngIf=\\\"weight\\\">\\r\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"updateWeight()\\\">\\r\\n    <div class=\\\"global-input\\\">\\r\\n      <ion-label position=\\\"stacked\\\">Current weigh-in (lbs)</ion-label>\\r\\n      <ion-input formControlName=\\\"weight\\\"\\r\\n                 [value]=\\\"weight.weight\\\"></ion-input>\\r\\n    </div>\\r\\n    <div class=\\\"global-input\\\">\\r\\n      <ion-label position=\\\"stacked\\\">Logged On</ion-label>\\r\\n      <ion-input disabled=\\\"true\\\" [value]=\\\"weight.logged_on.local().format('YYYY-MM-DD h:mm a')\\\"></ion-input>\\r\\n    </div>\\r\\n    <div class=\\\"inline bottom-btn global-input\\\">\\r\\n      <ion-button type=\\\"button\\\" color=\\\"danger\\\" expand=\\\"full\\\" (click)=\\\"isConfirmingDelete = !isConfirmingDelete\\\">{{ isConfirmingDelete ? 'Don\\\\'t Delete' : 'Delete' }}</ion-button>\\r\\n      <ion-button fill=\\\"clear\\\" expand=\\\"full\\\" *ngIf=\\\"!isConfirmingDelete\\\" strong (click)=\\\"close()\\\">Cancel</ion-button>\\r\\n      <ion-button type=\\\"submit\\\" *ngIf=\\\"!isConfirmingDelete\\\" color=\\\"primary\\\" expand=\\\"full\\\" [disabled]=\\\"!form.dirty || form.invalid\\\">\\r\\n        Update\\r\\n      </ion-button>\\r\\n      <ion-button *ngIf=\\\"isConfirmingDelete\\\" (click)=\\\"deleteWeight()\\\" color=\\\"primary\\\" expand=\\\"full\\\">\\r\\n        Delete\\r\\n      </ion-button>\\r\\n    </div>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\"","module.exports = \".bottom-btn {\\n  margin-top: 20px;\\n  bottom: 10px; }\\n  .bottom-btn ion-button {\\n    text-transform: uppercase;\\n    font-size: 14px; }\\n  .inline {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZWRpdC13ZWlnaHQvRTpcXGlvbmljXFxWZXJ2ZUNvbW1lcmNlXFxOZXdEZXZcXG10c3QtYXBwL3NyY1xcYXBwXFxwYWdlc1xcZWRpdC13ZWlnaHRcXGVkaXQtd2VpZ2h0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixZQUFZLEVBQUE7RUFGZDtJQUlJLHlCQUF5QjtJQUN6QixlQUFlLEVBQUE7RUFJbkI7RUFDRSxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLG1CQUFtQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvZWRpdC13ZWlnaHQvZWRpdC13ZWlnaHQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJvdHRvbS1idG4ge1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgYm90dG9tOiAxMHB4O1xyXG4gIGlvbi1idXR0b24ge1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICB9XHJcbn1cclxuXHJcbi5pbmxpbmUge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Weight, WeightsService } from '../../services/weights/weights.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { LoadingController, NavController } from '@ionic/angular';\r\nimport { ToastService } from '../../services/toast-service/toast-service.service';\r\nimport { ErrorsService } from '../../services/errors/errors.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { RequestCachingService } from '../../services/interceptors/caching/request-caching.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-weight',\r\n  templateUrl: './edit-weight.page.html',\r\n  styleUrls: ['./edit-weight.page.scss'],\r\n})\r\nexport class EditWeightPage implements OnInit {\r\n\r\n  public weight: Weight;\r\n  public isConfirmingDelete = false;\r\n\r\n  public form: FormGroup;\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    private toastService: ToastService,\r\n    private weightService: WeightsService,\r\n    private loadingCtrl: LoadingController,\r\n    public errorService: ErrorsService,\r\n    private route: ActivatedRoute,\r\n    private cacheService: RequestCachingService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.form = new FormGroup({\r\n      weight: new FormControl('', [\r\n        Validators.required,\r\n        Validators.max(600),\r\n        Validators.min(60),\r\n      ]),\r\n    });\r\n\r\n    this.form.get('weight').valueChanges.subscribe(value => {\r\n      this.roundOffWeight(value);\r\n    });\r\n\r\n    this.fetchWeight();\r\n  }\r\n\r\n  /**\r\n   * Rounding off the weight value to prevent decimal places.\r\n   * @todo check why number pipe is not rendering updated values on view (could be a bug or something is missing).\r\n   * @param value\r\n   */\r\n  private roundOffWeight(value: any) {\r\n    value = parseFloat(value);\r\n    if (!isNaN(value)) {\r\n      this.form.get('weight').setValue(Math.round(value), {\r\n        emitEvent: false\r\n      });\r\n    }\r\n  }\r\n\r\n  public close() {\r\n    this.navCtrl.navigateBack('/body-metrics');\r\n  }\r\n\r\n  /**\r\n   * Update the record with new weight value\r\n   */\r\n  public async updateWeight() {\r\n    const loader = await this.loadingCtrl.create({\r\n      message: 'Please wait ...'\r\n    });\r\n    await loader.present();\r\n\r\n    try {\r\n      this.weight = <Weight>await this.weightService.updateWeight(this.weight.id, this.form.get('weight').value);\r\n      this.cacheService.clearAll();\r\n      this.toastService.flash('Weigh in updated successfully');\r\n      this.navCtrl.navigateRoot('/body-metrics');\r\n    } catch (e) {\r\n      this.toastService.flash(this.errorService.firstError(e));\r\n    } finally {\r\n      loader.dismiss();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete the weight log entry\r\n   */\r\n  public async deleteWeight() {\r\n    const loader = await this.loadingCtrl.create({\r\n      message: 'Please wait ...'\r\n    });\r\n    await loader.present();\r\n\r\n    try {\r\n      this.weight = <Weight>await this.weightService.deleteWeight(this.weight.id);\r\n      this.cacheService.clearAll();\r\n      this.toastService.flash('Weigh in deleted successfully');\r\n      this.navCtrl.navigateRoot('/body-metrics');\r\n    } catch (e) {\r\n      this.toastService.flash(this.errorService.firstError(e));\r\n    } finally {\r\n      loader.dismiss();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetch original content\r\n   */\r\n  private async fetchWeight() {\r\n    const weightId = this.route.snapshot.params.id;\r\n\r\n    const loader = await this.loadingCtrl.create({\r\n      message: 'Please wait ...'\r\n    });\r\n\r\n    await loader.present();\r\n\r\n    try {\r\n      this.weight = <Weight>await this.weightService.getWeight(weightId);\r\n    } catch (e) {\r\n      this.toastService.flash(this.errorService.firstError(e));\r\n    } finally {\r\n      loader.dismiss();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, FormControl } from '@angular/forms';\r\n\r\ntype StateColors = 'dark' | 'danger' | 'warning';\r\n\r\nexport interface ErrorFormat {\r\n  status: number;\r\n  list: ErrorList;\r\n}\r\n\r\nexport interface ErrorList {\r\n  [key: string]: string[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorsService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  public stateColor(item: FormControl | AbstractControl): StateColors {\r\n    if (item.invalid && !item.dirty) {\r\n      return 'dark';\r\n    } else if (item.invalid) {\r\n      return 'danger';\r\n    } else {\r\n      return 'dark';\r\n    }\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the first error key with first value in the error object\r\n   * @param errors\r\n   * @return string\r\n   */\r\n  public firstError(errors: ErrorFormat): string {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return '';\r\n    }\r\n\r\n    const keys = Object.keys(errors.list);\r\n    return errors.list[keys[0]][0];\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the errors for the key\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public errorForKey(key: string, errors: ErrorFormat): string[] {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return [];\r\n    }\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      return errors.list[key];\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the first error value for the given key\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public firstErrorForKey(key: string, errors: ErrorFormat): string {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return '';\r\n    }\r\n\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      if (errors.list[key].length > 0) {\r\n        return errors.list[key][0];\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Checks whether the given key has any errors\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public keyHasError(key: string, errors: ErrorFormat): boolean {\r\n\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return false;\r\n    }\r\n\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      return errors.list[key].length > 0;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Checks whether the given key has any errors\r\n   * @param errors\r\n   */\r\n  public hasError(errors: ErrorFormat): boolean {\r\n\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return false;\r\n    }\r\n\r\n    for (const key in errors.list) {\r\n      if (errors.list[key].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Returns the error status value\r\n   * @param errors\r\n   */\r\n  public status(errors: ErrorFormat): number {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return -1;\r\n    }\r\n    return errors.status;\r\n  }\r\n\r\n  public checkIsCorrectStructure(error: any | ErrorFormat, throwException: boolean = true): boolean {\r\n    const isCorrect = !(!error.hasOwnProperty('status') || !error.hasOwnProperty('list'));\r\n\r\n    if (throwException && isCorrect === false) {\r\n      throw error;\r\n    }\r\n\r\n    return isCorrect;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseService } from '../base/base.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as moment from 'moment';\r\nimport { ErrorFormat } from '../errors/errors.service';\r\nimport { Moment } from 'moment';\r\nimport { Platform } from '@ionic/angular';\r\n\r\nexport interface Weight {\r\n  weight: number;\r\n  logged_on: string | Moment;\r\n  id: number;\r\n  transphormer_id: number;\r\n  nice_logged_date?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeightsService extends BaseService {\r\n\r\n  constructor(protected http: HttpClient, protected platform: Platform) {\r\n    super(http, platform);\r\n    WeightsService.SET_PLATFORM(platform);\r\n  }\r\n\r\n  /**\r\n   * Retrieves the latest weight of the transphormer\r\n   */\r\n  public latestWeight(): Promise<Weight | null | ErrorFormat> {\r\n    return this.http.get<Weight>(WeightsService.Url('weigh-ins/latest'), WeightsService.BaseOptions(true, true))\r\n      .toPromise()\r\n      .then(weight => this.loggedDateConversion(this.checkWeightValue(weight)))\r\n      .catch(WeightsService.HandleError);\r\n  }\r\n\r\n  /**\r\n   * Stores weight log for the transphormer\r\n   * @param weight\r\n   */\r\n  public saveWeight(weight: number): Promise<Weight | null | ErrorFormat> {\r\n    const data = {weight};\r\n    return this.http.post<Weight | null>(WeightsService.Url('weigh-ins'), data, WeightsService.BaseOptions(true, true))\r\n      .toPromise()\r\n      .then(newWeight => this.loggedDateConversion(newWeight))\r\n      .catch(WeightsService.HandleError);\r\n  }\r\n\r\n  /**\r\n   * List all weights for the transphormer\r\n   */\r\n  public listWeights(): Promise<Weight[] | ErrorFormat> {\r\n    return this.http.get<Weight[]>(WeightsService.Url('weigh-ins'), WeightsService.BaseOptions(true, true))\r\n      .toPromise()\r\n      .then(weights => weights.map(weight => this.loggedDateConversion(weight)))\r\n      .catch(WeightsService.HandleError);\r\n  }\r\n\r\n  /**\r\n   * Converts logged date string value to date value\r\n   * @param weight\r\n   */\r\n  private loggedDateConversion(weight: Weight | null): Weight {\r\n    if (weight !== null) {\r\n      weight.logged_on = moment.utc(weight.logged_on, 'YYYY-MM-DD HH:mm:ss', true);\r\n    }\r\n\r\n    return weight;\r\n  }\r\n\r\n  /**\r\n   * Updates the weight\r\n   * @param id\r\n   * @param weight\r\n   */\r\n  public updateWeight(id: number, weight: number): Promise<Weight | ErrorFormat> {\r\n    return this.http.put<Weight>(WeightsService.Url(`weigh-ins/${id}`), {weight}, WeightsService.BaseOptions())\r\n      .toPromise()\r\n      .then(newWeight => this.loggedDateConversion(newWeight))\r\n      .catch(WeightsService.HandleError);\r\n  }\r\n\r\n  /**\r\n   * Deletes the weight\r\n   * @param id\r\n   */\r\n  public deleteWeight(id: number): Promise<any | ErrorFormat> {\r\n    return this.http.delete(WeightsService.Url(`weigh-ins/${id}`), WeightsService.BaseOptions())\r\n      .toPromise()\r\n      .catch(WeightsService.HandleError);\r\n  }\r\n\r\n  private checkWeightValue(weight: Weight | any): Weight | null {\r\n    if (weight.hasOwnProperty('id')) {\r\n      return weight;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get single weight instance\r\n   * @param id\r\n   */\r\n  public getWeight(id: number): Promise<Weight | ErrorFormat> {\r\n    return this.http.get<Weight>(WeightsService.Url(`weigh-ins/${id}`), WeightsService.BaseOptions())\r\n      .toPromise()\r\n      .then(weight => this.loggedDateConversion(weight))\r\n      .catch(WeightsService.HandleError);\r\n  }\r\n}\r\n"],"sourceRoot":""}