{"version":3,"sources":["webpack:///./src/app/pages/trainer-registration/trainer-registration.module.ts","webpack:///./src/app/pages/trainer-registration/trainer-registration.page.html","webpack:///./src/app/pages/trainer-registration/trainer-registration.page.scss","webpack:///./src/app/pages/trainer-registration/trainer-registration.page.ts","webpack:///./src/app/services/errors/errors.service.ts"],"names":[],"mappings":"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","file":"pages-trainer-registration-trainer-registration-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TrainerRegistrationPage } from './trainer-registration.page';\r\nimport { LogoModule } from '../../components/logo/logo.module';\r\nimport { SideMenuModule } from '../../components/side-menu/side-menu.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TrainerRegistrationPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n    LogoModule,\r\n    SideMenuModule\r\n  ],\r\n  declarations: [TrainerRegistrationPage]\r\n})\r\nexport class TrainerRegistrationPageModule {\r\n}\r\n","module.exports = \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <app-menu-button></app-menu-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>Advisor Profile</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"profile\\\">\\r\\n    <ion-list>\\r\\n        <ion-list-header>Personal info</ion-list-header>\\r\\n        <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Address</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"address\\\"></ion-input>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Address 2</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"address2\\\"></ion-input>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">City</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"city\\\"></ion-input>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">State</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"state\\\"></ion-input>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Zip Code</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"postal_code\\\"></ion-input>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Country</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"country\\\"></ion-input>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Phone number</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"phone\\\"></ion-input>\\r\\n            </div>\\r\\n            <ion-list-header>Social media</ion-list-header>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Facebook Group URL</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"facebook_group\\\"></ion-input>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Facebook Profile URL</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"facebook\\\"></ion-input>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Instagram URL</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"instagram\\\"></ion-input>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Linked In URL</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"linkedin\\\"></ion-input>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Pinterest URL</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"pintrest\\\"></ion-input>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Twitter URL</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"twitter\\\"></ion-input>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Youtube URL</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"youtube\\\"></ion-input>\\r\\n            </div>\\r\\n            <ion-list-header>Training history</ion-list-header>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Which personal training certifications have you obtained?</ion-label>\\r\\n                <ion-radio-group formControlName=\\\"certifications\\\">\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">NASM</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"NASM\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">ACSM</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"ACSM\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">ISSA</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"ISSA\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">NPTI</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"NPTI\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">None</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"none\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                </ion-radio-group>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">How many clients do you currently train?</ion-label>\\r\\n                <ion-radio-group formControlName=\\\"current_training_clients\\\">\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">10-20 clients</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"10-20 clients\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">20+ clients</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"20+ clients\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                </ion-radio-group>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">How many years have you been training clients?</ion-label>\\r\\n                <ion-radio-group formControlName=\\\"years_training\\\">\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">1-2 years</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"1-2 years\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">2-5 years</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"2-5 years\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">5+ years</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"5+ years\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                </ion-radio-group>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Do you currently write nutrition plans for your clients?</ion-label>\\r\\n                <ion-radio-group formControlName=\\\"creates_nutrition_plans\\\">\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">Yes</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"1\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">No</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"0\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                </ion-radio-group>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Have you passed the Legionnaire Basic Training Certification?</ion-label>\\r\\n                <ion-radio-group formControlName=\\\"passed_basic_training\\\">\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">Yes</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"1\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">No</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"0\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                </ion-radio-group>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Do you make supplement recommendations to your clients?</ion-label>\\r\\n                <ion-radio-group formControlName=\\\"recommends_supplements\\\">\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">Yes</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"1\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">No</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"0\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                </ion-radio-group>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Do you currently have a Legionnaire Coach?</ion-label>\\r\\n                <ion-radio-group formControlName=\\\"has_legionnaire_coach\\\">\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">Yes</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"1\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">No</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"0\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                </ion-radio-group>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\" *ngIf=\\\"form.get('has_legionnaire_coach').value == 1\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Who is your legionnaire coach?</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"legionnaire_coach\\\"></ion-input>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Do you currently write workout programs for your clients?</ion-label>\\r\\n                <ion-radio-group formControlName=\\\"creates_workout_plans\\\">\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">Yes</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"1\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">No</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"0\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                </ion-radio-group>\\r\\n            </div>\\r\\n            <div class=\\\"global-input\\\">\\r\\n                <ion-label position=\\\"stacked\\\">How do you primarily train your clients?</ion-label>\\r\\n                <ion-radio-group formControlName=\\\"how_train_clients\\\">\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">In Person</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"in-person\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">Online</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"online\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label class=\\\"options\\\">Both</ion-label>\\r\\n                        <ion-radio mode=\\\"md\\\" slot=\\\"start\\\" value=\\\"both\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                </ion-radio-group>\\r\\n            </div>\\r\\n            <div slot=\\\"fixed\\\" class=\\\"global-input padding\\\">\\r\\n                <ion-button type=\\\"submit\\\" expand=\\\"full\\\" [disabled]=\\\"form.invalid\\\">Save Profile</ion-button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </ion-list>\\r\\n</ion-content>\\r\\n\"","module.exports = \".profile form {\\n  padding-bottom: 20px; }\\n\\nion-list-header {\\n  --background: var(--ion-color-header); }\\n\\nion-radio-group ion-item {\\n  --inner-border-width: 0;\\n  font-size: var(--app-caption-size); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdHJhaW5lci1yZWdpc3RyYXRpb24vRTpcXGlvbmljXFxWZXJ2ZUNvbW1lcmNlXFxOZXdEZXZcXG10c3QtYXBwL3NyY1xcYXBwXFxwYWdlc1xcdHJhaW5lci1yZWdpc3RyYXRpb25cXHRyYWluZXItcmVnaXN0cmF0aW9uLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLG9CQUFvQixFQUFBOztBQUl4QjtFQUNFLHFDQUFhLEVBQUE7O0FBR2Y7RUFFSSx1QkFBcUI7RUFDckIsa0NBQWtDLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy90cmFpbmVyLXJlZ2lzdHJhdGlvbi90cmFpbmVyLXJlZ2lzdHJhdGlvbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucHJvZmlsZSB7XHJcbiAgZm9ybSB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxuICB9XHJcbn1cclxuXHJcbmlvbi1saXN0LWhlYWRlciB7XHJcbiAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItaGVhZGVyKTtcclxufVxyXG5cclxuaW9uLXJhZGlvLWdyb3VwIHtcclxuICBpb24taXRlbSB7XHJcbiAgICAtLWlubmVyLWJvcmRlci13aWR0aDogMDtcclxuICAgIGZvbnQtc2l6ZTogdmFyKC0tYXBwLWNhcHRpb24tc2l6ZSlcclxuICB9XHJcbn1cclxuXHJcbi8vLmdsb2JhbC1pbnB1dCBpb24tbGFiZWwge1xyXG4vLyAgO1xyXG4vL31cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder, ValidatorFn, ValidationErrors } from '@angular/forms';\r\nimport { Trainer, TrainerService } from '../../services/trainer/trainer.service';\r\nimport {\r\n  LoadingController,\r\n} from '@ionic/angular';\r\nimport { ErrorsService } from '../../services/errors/errors.service';\r\nimport { Transphormer } from '../../services/authentication/authentication.service';\r\nimport { ToastService } from '../../services/toast-service/toast-service.service';\r\nimport { pick } from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-trainer-registration',\r\n  templateUrl: './trainer-registration.page.html',\r\n  styleUrls: ['./trainer-registration.page.scss'],\r\n})\r\nexport class TrainerRegistrationPage implements OnInit {\r\n  public form: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private trainerService: TrainerService,\r\n    private loadingCtrl: LoadingController,\r\n    private toastSvc: ToastService,\r\n    public errorService: ErrorsService,\r\n  ) {\r\n  }\r\n\r\n  public get transphormer(): Transphormer {\r\n    return JSON.parse(window.localStorage.getItem('transphormer'));\r\n  }\r\n\r\n  ngOnInit() {\r\n    const coachNameRequiredValidator: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\r\n      const has_legionnaire_coach = control.get('has_legionnaire_coach');\r\n      const legionnaire_coach = control.get('legionnaire_coach');\r\n\r\n      return has_legionnaire_coach.value === '1' &&\r\n        legionnaire_coach.value === '' ? { 'coachRequired': true } : null;\r\n    };\r\n\r\n    this.form = this.formBuilder.group({\r\n      address: this.formBuilder.control(''),\r\n      address2: this.formBuilder.control(''),\r\n      city: this.formBuilder.control(''),\r\n      state: this.formBuilder.control(''),\r\n      postal_code: this.formBuilder.control(''),\r\n      phone: this.formBuilder.control(''),\r\n      country: this.formBuilder.control(''),\r\n      facebook: this.formBuilder.control(''),\r\n      instagram: this.formBuilder.control(''),\r\n      linkedin: this.formBuilder.control(''),\r\n      pintrest: this.formBuilder.control(''),\r\n      twitter: this.formBuilder.control(''),\r\n      youtube: this.formBuilder.control(''),\r\n      certifications: this.formBuilder.control('', [Validators.required]),\r\n      facebook_group: this.formBuilder.control(''),\r\n      current_training_clients: this.formBuilder.control('', [Validators.required]),\r\n      years_training: this.formBuilder.control('', [Validators.required]),\r\n      creates_nutrition_plans: this.formBuilder.control('', [\r\n        Validators.required,\r\n      ]),\r\n      passed_basic_training: this.formBuilder.control('', [\r\n        Validators.required,\r\n      ]),\r\n      recommends_supplements: this.formBuilder.control('', [\r\n        Validators.required,\r\n      ]),\r\n      has_legionnaire_coach: this.formBuilder.control('', [\r\n        Validators.required,\r\n      ]),\r\n      creates_workout_plans: this.formBuilder.control('', [\r\n        Validators.required,\r\n      ]),\r\n      legionnaire_coach: this.formBuilder.control(''),\r\n      how_train_clients: this.formBuilder.control('', [Validators.required]),\r\n    }, { validators: coachNameRequiredValidator });\r\n    this.populateForm();\r\n  }\r\n\r\n  public async populateForm() {\r\n    const loader = await this.loadingCtrl.create({\r\n      message: 'Loading profile...',\r\n    });\r\n    await loader.present();\r\n\r\n    try {\r\n      const trainer: Trainer = <Trainer>(\r\n        await this.trainerService.getTrainerByTransphormerId(this.transphormer.id)\r\n      );\r\n\r\n      for (const attribute in pick(trainer, Object.keys(this.form.getRawValue()))) {\r\n        if (trainer.hasOwnProperty(attribute)) {\r\n          this.form.get(attribute).setValue(trainer[attribute]);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      this.toastSvc.flash(this.errorService.firstError(e));\r\n    } finally {\r\n      loader.dismiss();\r\n    }\r\n  }\r\n\r\n  public async submit() {\r\n    try {\r\n      await this.trainerService.updateTrainer(\r\n        this.trainer().trainer.id,\r\n        this.form.getRawValue()\r\n      );\r\n      this.toastSvc.flash('Profile saved.');\r\n    } catch (e) {\r\n      this.toastSvc.flash(this.errorService.firstError(e));\r\n    }\r\n  }\r\n\r\n  public trainer(): Transphormer {\r\n    return <Transphormer>(\r\n      JSON.parse(window.localStorage.getItem('transphormer'))\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, FormControl } from '@angular/forms';\r\n\r\ntype StateColors = 'dark' | 'danger' | 'warning';\r\n\r\nexport interface ErrorFormat {\r\n  status: number;\r\n  list: ErrorList;\r\n}\r\n\r\nexport interface ErrorList {\r\n  [key: string]: string[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorsService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  public stateColor(item: FormControl | AbstractControl): StateColors {\r\n    if (item.invalid && !item.dirty) {\r\n      return 'dark';\r\n    } else if (item.invalid) {\r\n      return 'danger';\r\n    } else {\r\n      return 'dark';\r\n    }\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the first error key with first value in the error object\r\n   * @param errors\r\n   * @return string\r\n   */\r\n  public firstError(errors: ErrorFormat): string {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return '';\r\n    }\r\n\r\n    const keys = Object.keys(errors.list);\r\n    return errors.list[keys[0]][0];\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the errors for the key\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public errorForKey(key: string, errors: ErrorFormat): string[] {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return [];\r\n    }\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      return errors.list[key];\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the first error value for the given key\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public firstErrorForKey(key: string, errors: ErrorFormat): string {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return '';\r\n    }\r\n\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      if (errors.list[key].length > 0) {\r\n        return errors.list[key][0];\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Checks whether the given key has any errors\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public keyHasError(key: string, errors: ErrorFormat): boolean {\r\n\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return false;\r\n    }\r\n\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      return errors.list[key].length > 0;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Checks whether the given key has any errors\r\n   * @param errors\r\n   */\r\n  public hasError(errors: ErrorFormat): boolean {\r\n\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return false;\r\n    }\r\n\r\n    for (const key in errors.list) {\r\n      if (errors.list[key].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Returns the error status value\r\n   * @param errors\r\n   */\r\n  public status(errors: ErrorFormat): number {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return -1;\r\n    }\r\n    return errors.status;\r\n  }\r\n\r\n  public checkIsCorrectStructure(error: any | ErrorFormat, throwException: boolean = true): boolean {\r\n    const isCorrect = !(!error.hasOwnProperty('status') || !error.hasOwnProperty('list'));\r\n\r\n    if (throwException && isCorrect === false) {\r\n      throw error;\r\n    }\r\n\r\n    return isCorrect;\r\n  }\r\n}\r\n"],"sourceRoot":""}