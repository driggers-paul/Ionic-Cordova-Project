{"version":3,"sources":["webpack:///./src/app/pages/trainer-announcements/trainer-announcements.module.ts","webpack:///./src/app/pages/trainer-announcements/trainer-announcements.page.html","webpack:///./src/app/pages/trainer-announcements/trainer-announcements.page.scss","webpack:///./src/app/pages/trainer-announcements/trainer-announcements.page.ts","webpack:///./src/app/services/errors/errors.service.ts"],"names":[],"mappings":"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","file":"pages-trainer-announcements-trainer-announcements-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TrainerAnnouncementsPage } from './trainer-announcements.page';\r\nimport { SideMenuModule } from '../../components/side-menu/side-menu.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TrainerAnnouncementsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    SideMenuModule\r\n  ],\r\n  declarations: [TrainerAnnouncementsPage]\r\n})\r\nexport class TrainerAnnouncementsPageModule {\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <app-menu-button></app-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>My Announcements</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button (click)=\\\"create()\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\"\\r\\n                  color=\\\"primary\\\"\\r\\n                  name=\\\"add\\\"\\r\\n                  size=\\\"large\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card *ngFor=\\\"let announcement of announcements\\\">\\r\\n    <ion-card-header>\\r\\n      <ion-card-title>{{ announcement.heading }}</ion-card-title>\\r\\n      <small>Sent {{ announcement.sent.format('MMMM Do, YYYY [at] h:mm a') }}</small>\\r\\n    </ion-card-header>\\r\\n\\r\\n    <ion-card-content>\\r\\n      {{ announcement.announcements }}\\r\\n    </ion-card-content>\\r\\n    <ion-chip padding color=\\\"primary\\\">\\r\\n      <ion-icon name=\\\"people\\\" ></ion-icon>\\r\\n      <ion-label>{{ announcement.transphormer_announcements_count }} People</ion-label>\\r\\n    </ion-chip>\\r\\n  </ion-card>\\r\\n\\r\\n  <h4 text-center padding *ngIf=\\\"announcements.length === 0\\\">No announcements available. Please check again later.</h4>\\r\\n</ion-content>\\r\\n\"","module.exports = \"ion-card-content {\\n  font-size: 14px; }\\n\\nion-chip {\\n  margin: 10px; }\\n\\nion-chip ion-icon {\\n    font-size: 16px; }\\n\\nion-chip ion-label {\\n    font-size: 14px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdHJhaW5lci1hbm5vdW5jZW1lbnRzL0U6XFxpb25pY1xcVmVydmVDb21tZXJjZVxcTmV3RGV2XFxtdHN0LWFwcC9zcmNcXGFwcFxccGFnZXNcXHRyYWluZXItYW5ub3VuY2VtZW50c1xcdHJhaW5lci1hbm5vdW5jZW1lbnRzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWUsRUFBQTs7QUFHakI7RUFDRSxZQUFZLEVBQUE7O0FBRGQ7SUFJSSxlQUFlLEVBQUE7O0FBSm5CO0lBUUksZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdHJhaW5lci1hbm5vdW5jZW1lbnRzL3RyYWluZXItYW5ub3VuY2VtZW50cy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY2FyZC1jb250ZW50IHtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbmlvbi1jaGlwIHtcclxuICBtYXJnaW46IDEwcHg7XHJcblxyXG4gIGlvbi1pY29uIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcblxyXG4gIGlvbi1sYWJlbCB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ErrorsService } from '../../services/errors/errors.service';\r\nimport {\r\n  Announcement,\r\n  AnnouncementsService,\r\n} from '../../services/announcements/announcements.service';\r\nimport { LoadingController, NavController } from '@ionic/angular';\r\nimport { ToastService } from '../../services/toast-service/toast-service.service';\r\n\r\n@Component({\r\n  selector: 'app-trainer-announcements',\r\n  templateUrl: './trainer-announcements.page.html',\r\n  styleUrls: ['./trainer-announcements.page.scss'],\r\n})\r\nexport class TrainerAnnouncementsPage implements OnInit {\r\n  constructor(\r\n    public errorService: ErrorsService,\r\n    private announceService: AnnouncementsService,\r\n    private toastSvc: ToastService,\r\n    private navCtrl: NavController,\r\n    private loadingCtrl: LoadingController\r\n  ) {\r\n  }\r\n\r\n  public announcements: Announcement[] = [];\r\n\r\n  ngOnInit() {\r\n    this.getAnnouncements();\r\n  }\r\n\r\n  private async getAnnouncements() {\r\n    const loader = await this.loadingCtrl.create({\r\n      message: 'Loading...',\r\n    });\r\n    await loader.present();\r\n\r\n    try {\r\n      this.announcements = <Announcement[]>(\r\n        await this.announceService.trainerAnnouncements()\r\n      );\r\n    } catch (e) {\r\n      this.toastSvc.flash(this.errorService.firstError(e));\r\n    } finally {\r\n      loader.dismiss();\r\n    }\r\n  }\r\n\r\n  public create() {\r\n    this.navCtrl.navigateForward('/create-announcement');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, FormControl } from '@angular/forms';\r\n\r\ntype StateColors = 'dark' | 'danger' | 'warning';\r\n\r\nexport interface ErrorFormat {\r\n  status: number;\r\n  list: ErrorList;\r\n}\r\n\r\nexport interface ErrorList {\r\n  [key: string]: string[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorsService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  public stateColor(item: FormControl | AbstractControl): StateColors {\r\n    if (item.invalid && !item.dirty) {\r\n      return 'dark';\r\n    } else if (item.invalid) {\r\n      return 'danger';\r\n    } else {\r\n      return 'dark';\r\n    }\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the first error key with first value in the error object\r\n   * @param errors\r\n   * @return string\r\n   */\r\n  public firstError(errors: ErrorFormat): string {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return '';\r\n    }\r\n\r\n    const keys = Object.keys(errors.list);\r\n    return errors.list[keys[0]][0];\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the errors for the key\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public errorForKey(key: string, errors: ErrorFormat): string[] {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return [];\r\n    }\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      return errors.list[key];\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the first error value for the given key\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public firstErrorForKey(key: string, errors: ErrorFormat): string {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return '';\r\n    }\r\n\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      if (errors.list[key].length > 0) {\r\n        return errors.list[key][0];\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Checks whether the given key has any errors\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public keyHasError(key: string, errors: ErrorFormat): boolean {\r\n\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return false;\r\n    }\r\n\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      return errors.list[key].length > 0;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Checks whether the given key has any errors\r\n   * @param errors\r\n   */\r\n  public hasError(errors: ErrorFormat): boolean {\r\n\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return false;\r\n    }\r\n\r\n    for (const key in errors.list) {\r\n      if (errors.list[key].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Returns the error status value\r\n   * @param errors\r\n   */\r\n  public status(errors: ErrorFormat): number {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return -1;\r\n    }\r\n    return errors.status;\r\n  }\r\n\r\n  public checkIsCorrectStructure(error: any | ErrorFormat, throwException: boolean = true): boolean {\r\n    const isCorrect = !(!error.hasOwnProperty('status') || !error.hasOwnProperty('list'));\r\n\r\n    if (throwException && isCorrect === false) {\r\n      throw error;\r\n    }\r\n\r\n    return isCorrect;\r\n  }\r\n}\r\n"],"sourceRoot":""}