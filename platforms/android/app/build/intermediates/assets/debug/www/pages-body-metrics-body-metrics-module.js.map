{"version":3,"sources":["webpack:///./src/app/pages/body-metrics/body-metrics.module.ts","webpack:///./src/app/pages/body-metrics/body-metrics.page.html","webpack:///./src/app/pages/body-metrics/body-metrics.page.scss","webpack:///./src/app/pages/body-metrics/body-metrics.page.ts","webpack:///./src/app/services/weights/weights.service.ts"],"names":[],"mappings":"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","file":"pages-body-metrics-body-metrics-module.js","sourcesContent":["import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { BodyMetricsPage } from './body-metrics.page';\r\nimport { ChartModule } from '../../components/chart/chart.module';\r\nimport { SideMenuModule } from '../../components/side-menu/side-menu.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BodyMetricsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ChartModule,\r\n    SideMenuModule\r\n  ],\r\n  declarations: [BodyMetricsPage],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  exports: []\r\n})\r\nexport class BodyMetricsPageModule {\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>My Weigh-ins</ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <app-menu-button></app-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button color=\\\"primary\\\" fill=\\\"clear\\\" (click)=\\\"goToAddWeighIn()\\\">\\r\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <div class=\\\"heading\\\" margin-bottom *ngIf=\\\"weights.length > 1\\\">\\r\\n    {{ weights[weights.length - 1].weight }} lbs\\r\\n    <ion-icon name=\\\"arrow-round-forward\\\"></ion-icon>\\r\\n    {{ weights[0].weight }} lbs\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"heading\\\" margin-bottom *ngIf=\\\"weights.length === 1\\\">\\r\\n    {{ weights[0].weight }} lbs\\r\\n    <ion-icon name=\\\"arrow-round-forward\\\"></ion-icon>\\r\\n    {{ weights[0].weight }} lbs\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"heading\\\" margin-bottom *ngIf=\\\"weights.length === 0\\\">\\r\\n    No weigh-ins to see. Log one!\\r\\n  </div>\\r\\n\\r\\n  <app-chart margin-vertical [weights]=\\\"weights\\\"></app-chart>\\r\\n  <ion-list margin-top>\\r\\n    <ion-item *ngFor=\\\"let weight of weights; let i = index; last as isLast\\\" (click)=\\\"goToEditWeight(weight)\\\">\\r\\n      <ion-label>{{ weight.weight }} lbs <span class=\\\"diff\\\" *ngIf=\\\"!isLast\\\">({{ diffInWeight(i) > 0 ? '+' : '' }}{{ diffInWeight(i) }} {{ Math.abs(diffInWeight(i)) > 1 ? 'lbs' : 'lb'}})</span></ion-label>\\r\\n      <span class=\\\"time\\\">{{ weight.logged_on.local().fromNow() }}</span>\\r\\n      <ion-button fill=\\\"clear\\\" type=\\\"button\\\">\\r\\n        <ion-icon name=\\\"arrow-forward\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\"","module.exports = \".heading {\\n  text-align: center; }\\n\\n.time {\\n  font-size: 80%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYm9keS1tZXRyaWNzL0U6XFxpb25pY1xcVmVydmVDb21tZXJjZVxcTmV3RGV2XFxtdHN0LWFwcC9zcmNcXGFwcFxccGFnZXNcXGJvZHktbWV0cmljc1xcYm9keS1tZXRyaWNzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQixFQUFBOztBQUdwQjtFQUNFLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2JvZHktbWV0cmljcy9ib2R5LW1ldHJpY3MucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRpbmcge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnRpbWUge1xyXG4gIGZvbnQtc2l6ZTogODAlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ErrorsService } from '../../services/errors/errors.service';\r\nimport {\r\n  LoadingController,\r\n  ToastController,\r\n  NavController\r\n} from '@ionic/angular';\r\nimport { Weight, WeightsService } from '../../services/weights/weights.service';\r\nimport { Moment } from 'moment';\r\nimport * as moment from 'moment';\r\n\r\nexport interface DisplayWeight extends Weight {\r\n  diff: number;\r\n  diffInDateAsReadable: string;\r\n  momentDate: Moment;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-body-metrics',\r\n  templateUrl: './body-metrics.page.html',\r\n  styleUrls: ['./body-metrics.page.scss']\r\n})\r\nexport class BodyMetricsPage implements OnInit {\r\n  public weights: DisplayWeight[] = [];\r\n  public Math;\r\n\r\n  constructor(\r\n    public errorService: ErrorsService,\r\n    private loadingCtrl: LoadingController,\r\n    private toastCtrl: ToastController,\r\n    private weightService: WeightsService,\r\n    private navCtrl: NavController\r\n  ) {\r\n    this.Math = Math;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setupWeights();\r\n  }\r\n\r\n  private async setupWeights() {\r\n    const loader = await this.loadingCtrl.create({\r\n      message: 'Please wait ...'\r\n    });\r\n    await loader.present();\r\n\r\n    try {\r\n      const weights = <Weight[]>await this.weightService.listWeights();\r\n      const now = moment();\r\n\r\n      this.weights = weights.reduce(\r\n        (carry: DisplayWeight[], weight): DisplayWeight[] => {\r\n          const displayWeight = <DisplayWeight>weight;\r\n\r\n          if (now.diff(<Moment>displayWeight.logged_on, 'days') === 0) {\r\n            displayWeight.diffInDateAsReadable = 'Today';\r\n          } else if (now.diff(<Moment>displayWeight.logged_on, 'weeks') !== 0) {\r\n            displayWeight.diffInDateAsReadable = `${now.diff(\r\n              <Moment>displayWeight.logged_on,\r\n              'weeks'\r\n            )} weeks ago`;\r\n          } else {\r\n            displayWeight.diffInDateAsReadable = `${now.diff(\r\n              <Moment>displayWeight.logged_on,\r\n              'days'\r\n            )} days ago`;\r\n          }\r\n\r\n          carry.push(displayWeight);\r\n\r\n          return carry;\r\n        },\r\n        []\r\n      );\r\n    } catch (e) {\r\n      const toast = await this.toastCtrl.create({\r\n        message: this.errorService.firstError(e),\r\n        duration: 3000,\r\n      });\r\n      await toast.present();\r\n    } finally {\r\n      loader.dismiss();\r\n    }\r\n  }\r\n\r\n  public diffInWeight(currentIndex): number {\r\n    if (currentIndex === this.weights.length - 1) {\r\n      return 0;\r\n    } else {\r\n      return (\r\n        -1 *\r\n        (this.weights[currentIndex + 1].weight -\r\n          this.weights[currentIndex].weight)\r\n      );\r\n    }\r\n  }\r\n\r\n  public goToAddWeighIn() {\r\n    this.navCtrl.navigateRoot('weight', {\r\n      animationDirection: 'forward',\r\n      animated: true\r\n    });\r\n  }\r\n\r\n  public goToEditWeight(weight: Weight) {\r\n    this.navCtrl.navigateRoot(`weight/${weight.id}/edit`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseService } from '../base/base.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as moment from 'moment';\r\nimport { ErrorFormat } from '../errors/errors.service';\r\nimport { Moment } from 'moment';\r\nimport { Platform } from '@ionic/angular';\r\n\r\nexport interface Weight {\r\n  weight: number;\r\n  logged_on: string | Moment;\r\n  id: number;\r\n  transphormer_id: number;\r\n  nice_logged_date?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeightsService extends BaseService {\r\n\r\n  constructor(protected http: HttpClient, protected platform: Platform) {\r\n    super(http, platform);\r\n    WeightsService.SET_PLATFORM(platform);\r\n  }\r\n\r\n  /**\r\n   * Retrieves the latest weight of the transphormer\r\n   */\r\n  public latestWeight(): Promise<Weight | null | ErrorFormat> {\r\n    return this.http.get<Weight>(WeightsService.Url('weigh-ins/latest'), WeightsService.BaseOptions(true, true))\r\n      .toPromise()\r\n      .then(weight => this.loggedDateConversion(this.checkWeightValue(weight)))\r\n      .catch(WeightsService.HandleError);\r\n  }\r\n\r\n  /**\r\n   * Stores weight log for the transphormer\r\n   * @param weight\r\n   */\r\n  public saveWeight(weight: number): Promise<Weight | null | ErrorFormat> {\r\n    const data = {weight};\r\n    return this.http.post<Weight | null>(WeightsService.Url('weigh-ins'), data, WeightsService.BaseOptions(true, true))\r\n      .toPromise()\r\n      .then(newWeight => this.loggedDateConversion(newWeight))\r\n      .catch(WeightsService.HandleError);\r\n  }\r\n\r\n  /**\r\n   * List all weights for the transphormer\r\n   */\r\n  public listWeights(): Promise<Weight[] | ErrorFormat> {\r\n    return this.http.get<Weight[]>(WeightsService.Url('weigh-ins'), WeightsService.BaseOptions(true, true))\r\n      .toPromise()\r\n      .then(weights => weights.map(weight => this.loggedDateConversion(weight)))\r\n      .catch(WeightsService.HandleError);\r\n  }\r\n\r\n  /**\r\n   * Converts logged date string value to date value\r\n   * @param weight\r\n   */\r\n  private loggedDateConversion(weight: Weight | null): Weight {\r\n    if (weight !== null) {\r\n      weight.logged_on = moment.utc(weight.logged_on, 'YYYY-MM-DD HH:mm:ss', true);\r\n    }\r\n\r\n    return weight;\r\n  }\r\n\r\n  /**\r\n   * Updates the weight\r\n   * @param id\r\n   * @param weight\r\n   */\r\n  public updateWeight(id: number, weight: number): Promise<Weight | ErrorFormat> {\r\n    return this.http.put<Weight>(WeightsService.Url(`weigh-ins/${id}`), {weight}, WeightsService.BaseOptions())\r\n      .toPromise()\r\n      .then(newWeight => this.loggedDateConversion(newWeight))\r\n      .catch(WeightsService.HandleError);\r\n  }\r\n\r\n  /**\r\n   * Deletes the weight\r\n   * @param id\r\n   */\r\n  public deleteWeight(id: number): Promise<any | ErrorFormat> {\r\n    return this.http.delete(WeightsService.Url(`weigh-ins/${id}`), WeightsService.BaseOptions())\r\n      .toPromise()\r\n      .catch(WeightsService.HandleError);\r\n  }\r\n\r\n  private checkWeightValue(weight: Weight | any): Weight | null {\r\n    if (weight.hasOwnProperty('id')) {\r\n      return weight;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get single weight instance\r\n   * @param id\r\n   */\r\n  public getWeight(id: number): Promise<Weight | ErrorFormat> {\r\n    return this.http.get<Weight>(WeightsService.Url(`weigh-ins/${id}`), WeightsService.BaseOptions())\r\n      .toPromise()\r\n      .then(weight => this.loggedDateConversion(weight))\r\n      .catch(WeightsService.HandleError);\r\n  }\r\n}\r\n"],"sourceRoot":""}