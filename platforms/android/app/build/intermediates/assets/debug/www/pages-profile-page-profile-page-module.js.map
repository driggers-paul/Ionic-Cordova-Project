{"version":3,"sources":["webpack:///./src/app/pages/profile-page/profile-page.module.ts","webpack:///./src/app/pages/profile-page/profile-page.page.html","webpack:///./src/app/pages/profile-page/profile-page.page.scss","webpack:///./src/app/pages/profile-page/profile-page.page.ts","webpack:///./src/app/services/analytics/analytic-events.enum.ts"],"names":[],"mappings":"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","file":"pages-profile-page-profile-page-module.js","sourcesContent":["import { HeightModule } from './../../components/height/height.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ProfilePagePage } from './profile-page.page';\r\nimport { SideMenuModule } from '../../components/side-menu/side-menu.module';\r\nimport { AppComponentsModule } from '../../components/common-components.module';\r\nimport { NutritionModule } from '../../components/nutrition/nutrition.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfilePagePage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n    HeightModule,\r\n    AppComponentsModule,\r\n    SideMenuModule,\r\n    NutritionModule\r\n  ],\r\n  declarations: [ProfilePagePage]\r\n})\r\nexport class ProfilePagePageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <app-menu-button></app-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>My Profile</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"profile\\\">\\r\\n  <ion-list>\\r\\n    <ion-list-header>Personal info</ion-list-header>\\r\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"updateProfile()\\\">\\r\\n      <div class=\\\"global-input\\\">\\r\\n        <ion-label position=\\\"stacked\\\">Email</ion-label>\\r\\n        <ion-input type=\\\"email\\\" disabled=\\\"true\\\" [value]=\\\"email\\\"></ion-input>\\r\\n      </div>\\r\\n      <div class=\\\"global-input\\\">\\r\\n        <ion-label position=\\\"stacked\\\">First Name</ion-label>\\r\\n        <ion-input type=\\\"text\\\" formControlName=\\\"first_name\\\"></ion-input>\\r\\n      </div>\\r\\n      <div class=\\\"global-input\\\">\\r\\n        <ion-label position=\\\"stacked\\\">Last Name</ion-label>\\r\\n        <ion-input type=\\\"text\\\" formControlName=\\\"last_name\\\"></ion-input>\\r\\n      </div>\\r\\n      <div class=\\\"global-input\\\">\\r\\n        <ion-label position=\\\"stacked\\\">Height</ion-label>\\r\\n        <app-height [height]=\\\"form.get('height').value\\\" (heightChange)=\\\"form.get('height').setValue($event)\\\">\\r\\n      </app-height>\\r\\n      </div>\\r\\n      <div class=\\\"global-input padding\\\">\\r\\n        <ion-label position=\\\"stacked\\\">Weight</ion-label>\\r\\n        <ion-button type=\\\"button\\\" color=\\\"primary\\\" fill=\\\"outline\\\" expand=\\\"full\\\" (click)=\\\"goToWeighIn()\\\">\\r\\n          + Add Weight\\r\\n        </ion-button>\\r\\n      </div>\\r\\n      <div class=\\\"global-input\\\">\\r\\n        <ion-label position=\\\"stacked\\\">Date of Birth</ion-label>\\r\\n        <ion-datetime display-format=\\\"MM/DD/YYYY\\\" formControlName=\\\"date_of_birth\\\"></ion-datetime>\\r\\n      </div>\\r\\n      <div class=\\\"global-input\\\">\\r\\n        <ion-label position=\\\"stacked\\\">Sex</ion-label>\\r\\n        <ion-select formControlName=\\\"sex\\\" placeholder=\\\"Please Select\\\">\\r\\n          <ion-select-option [value]=\\\"SexValues.Male\\\">Male</ion-select-option>\\r\\n          <ion-select-option [value]=\\\"SexValues.Female\\\">Female</ion-select-option>\\r\\n        </ion-select>\\r\\n      </div>\\r\\n      <div class=\\\"global-input padding\\\">\\r\\n        <ion-label position=\\\"stacked\\\">Goal Weight</ion-label>\\r\\n        <ion-input type=\\\"text\\\" formControlName=\\\"goal_weight\\\"></ion-input>\\r\\n        <small *ngIf=\\\"isMacroCalorieCounting\\\">Your goal weight is influencing your daily Macros.</small>\\r\\n      </div>\\r\\n      <ion-list-header>Workouts</ion-list-header>\\r\\n      <div class=\\\"global-input\\\">\\r\\n        <ion-label position=\\\"stacked\\\">What level of exercise are you ready for?</ion-label>\\r\\n        <ion-select formControlName=\\\"training_level\\\" placeholder=\\\"Please Select\\\">\\r\\n          <ion-select-option *ngFor=\\\"let trainingLevel of trainingLevels\\\" [value]=\\\"trainingLevel.value\\\">{{\\r\\n            trainingLevel.name }}\\r\\n          </ion-select-option>\\r\\n        </ion-select>\\r\\n      </div>\\r\\n      <div class=\\\"global-input\\\">\\r\\n        <ion-label position=\\\"stacked\\\">Are you working out in a gym?</ion-label>\\r\\n        <ion-select formControlName=\\\"access_to_gym\\\" placeholder=\\\"Please Select\\\">\\r\\n          <ion-select-option value=\\\"1\\\">Yes</ion-select-option>\\r\\n          <ion-select-option value=\\\"0\\\">No</ion-select-option>\\r\\n        </ion-select>\\r\\n      </div>\\r\\n      <div class=\\\"global-input\\\" *ngIf=\\\"form.get('access_to_gym').value == 0\\\">\\r\\n        <ion-label position=\\\"stacked\\\">What type of equipment do you have at home or have access to?</ion-label>\\r\\n        <ion-select formControlName=\\\"home_workout_selection\\\" placeholder=\\\"Please Select\\\">\\r\\n          <ion-select-option *ngFor=\\\"let homeWorkout of homeWorkouts\\\" [value]=\\\"homeWorkout.value\\\">{{\\r\\n            homeWorkout.name }}\\r\\n          </ion-select-option>\\r\\n        </ion-select>\\r\\n      </div>\\r\\n      <div class=\\\"global-input\\\" *ngIf=\\\"form.get('access_to_gym').value == 1\\\">\\r\\n        <ion-label position=\\\"stacked\\\">Do you prefer traditional lifting plans or circuit style training or functional\\r\\n          fitness?</ion-label>\\r\\n        <ion-select formControlName=\\\"gym_workout_selection\\\" placeholder=\\\"Please Select\\\">\\r\\n          <ion-select-option *ngFor=\\\"let programType of programTypes\\\" [value]=\\\"programType.value\\\">{{ programType.name\\r\\n            }}</ion-select-option>\\r\\n        </ion-select>\\r\\n      </div>\\r\\n      <div class=\\\"premium-note\\\" *ngIf=\\\"is_free_user && form.get('gym_workout_selection').value && form.get('gym_workout_selection').value != getProgramType(2).value && form.get('access_to_gym').value == 1\\\">\\r\\n        <p>The <strong>{{ getProgramType(form.get('gym_workout_selection').value).name }}</strong> training program is only available to\\r\\n          Premium subscribers. You will default to the free option.\\r\\n        </p>\\r\\n        <ion-button class=\\\"premium\\\" fill=\\\"solid\\\" color=\\\"warning\\\" size=\\\"small\\\" shape=\\\"round\\\" (click)=\\\"goPremium()\\\">Go Premium &rarr;</ion-button>\\r\\n      </div>\\r\\n      <div class=\\\"premium-note\\\" *ngIf=\\\"is_free_user && form.get('access_to_gym').value == 0\\\">\\r\\n        <p>The <strong>at-home workout</strong> training programs are only available to\\r\\n          Premium subscribers. You will default to the Traditional gym workout.\\r\\n        </p>\\r\\n        <ion-button class=\\\"premium\\\" fill=\\\"solid\\\" color=\\\"warning\\\" size=\\\"small\\\" shape=\\\"round\\\" (click)=\\\"goPremium()\\\">Go Premium &rarr;</ion-button>\\r\\n      </div>\\r\\n      <ion-list-header>Nutrition</ion-list-header>\\r\\n      <div class=\\\"global-input\\\">\\r\\n        <ion-label position=\\\"stacked\\\">What are you more likely to do?</ion-label>\\r\\n        <ion-select [interfaceOptions]=\\\"{header: 'Choose an option'}\\\" formControlName=\\\"likely_to_do\\\" placeholder=\\\"Please Select\\\">\\r\\n          <ion-select-option [value]=\\\"'Macro meal plan'\\\">Meal plan</ion-select-option>\\r\\n          <ion-select-option>Calorie / Macro counting</ion-select-option>\\r\\n          <ion-select-option>Portion control</ion-select-option>\\r\\n        </ion-select>\\r\\n      </div>\\r\\n      <div class=\\\"premium-note\\\" *ngIf=\\\"is_free_user && form.get('likely_to_do').value === 'Calorie / Macro counting'\\\">\\r\\n        <p>The <strong>{{ form.get('likely_to_do').value }}</strong> option is only available to Premium subscribers.\\r\\n          You will default to the free option.\\r\\n        </p>\\r\\n        <ion-button class=\\\"premium\\\" fill=\\\"solid\\\" color=\\\"warning\\\" size=\\\"small\\\" shape=\\\"round\\\" (click)=\\\"goPremium()\\\">Go Premium &rarr;</ion-button>\\r\\n      </div>\\r\\n      <div class=\\\"global-input\\\">\\r\\n        <app-macros-bar [transphormer]=\\\"transphormer\\\"></app-macros-bar>\\r\\n        <ion-button margin-top *ngIf=\\\"isMacroCalorieCounting\\\" (click)=\\\"openCustomMacro()\\\" expand=\\\"full\\\" >Customize Macros</ion-button>\\r\\n      </div>\\r\\n      <div class=\\\"premium-note\\\" *ngIf=\\\"isMacroCalorieCounting && hasCustomMacros\\\">\\r\\n        <p>Your macros are customized. Changing the values below will not affect your macros unless they are reset.</p>\\r\\n      </div>\\r\\n      <div class=\\\"global-input\\\">\\r\\n        <ion-label position=\\\"stacked\\\">I want to...</ion-label>\\r\\n        <ion-select formControlName=\\\"transphormation_goal\\\" placeholder=\\\"Please Select\\\">\\r\\n          <ion-select-option *ngFor=\\\"let transphormationGoal of transphormationGoals\\\" [value]=\\\"transphormationGoal\\\">{{\\r\\n            transphormationGoal }}\\r\\n          </ion-select-option>\\r\\n        </ion-select>\\r\\n        <small>This value impacts your daily macros.</small>\\r\\n      </div>\\r\\n      <div class=\\\"global-input\\\">\\r\\n        <ion-label position=\\\"stacked\\\">What is your daily activity level?</ion-label>\\r\\n        <ion-select formControlName=\\\"activity_level\\\" placeholder=\\\"Please Select\\\">\\r\\n          <ion-select-option *ngFor=\\\"let activeLevel of activeLevels\\\" [value]=\\\"activeLevel\\\">{{\\r\\n            activeLevel }}\\r\\n          </ion-select-option>\\r\\n        </ion-select>\\r\\n        <small>This value impacts your daily macros.</small>\\r\\n      </div>\\r\\n      <div class=\\\"global-input\\\" *ngIf=\\\"form.get('likely_to_do').value === 'Macro meal plan'\\\">\\r\\n        <ion-label position=\\\"stacked\\\">How many meals per day are you wanting to eat?</ion-label>\\r\\n        <ion-select formControlName=\\\"meals_per_day\\\" placeholder=\\\"Please Select\\\">\\r\\n          <ion-select-option [value]=\\\"3\\\">3</ion-select-option>\\r\\n          <ion-select-option [value]=\\\"4\\\">4</ion-select-option>\\r\\n          <ion-select-option [value]=\\\"5\\\">5</ion-select-option>\\r\\n        </ion-select>\\r\\n        <small>This value does not impact your macros, only portion sizes.</small>\\r\\n      </div>\\r\\n      <div class=\\\"global-input\\\" *ngIf=\\\"isMacroCalorieCounting\\\">\\r\\n        <ion-label position=\\\"stacked\\\">Do you prefer Carbs or Fats?</ion-label>\\r\\n        <ion-select formControlName=\\\"preference_macro_counting\\\" placeholder=\\\"Please Select\\\" [interfaceOptions]=\\\"{header: 'Carbs or Fats?'}\\\">\\r\\n          <ion-select-option value=\\\"Both\\\">Both</ion-select-option>\\r\\n          <ion-select-option value=\\\"Carbs\\\">Carbs</ion-select-option>\\r\\n          <ion-select-option value=\\\"Fats\\\">Fat</ion-select-option>\\r\\n        </ion-select>\\r\\n        <small>This value adjusts daily carbs and fats.</small>\\r\\n      </div>\\r\\n      <div class=\\\"global-input padding\\\">\\r\\n        <ion-button type=\\\"submit\\\" color=\\\"primary\\\" expand=\\\"full\\\">Update</ion-button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\"","module.exports = \".profile form {\\n  padding-bottom: 20px; }\\n\\nion-list-header {\\n  --background: var(--ion-color-header); }\\n\\n.premium-note {\\n  margin: calc(var(--default-margin) * -1) calc(var(--default-margin) * 2) calc(var(--default-margin) * 3);\\n  background: var(--ion-color-warning-lightest);\\n  padding: var(--default-margin); }\\n\\n.premium-note p {\\n    font-size: 12pt;\\n    margin-top: 0;\\n    margin-bottom: var(--default-margin); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvZmlsZS1wYWdlL0U6XFxpb25pY1xcVmVydmVDb21tZXJjZVxcTmV3RGV2XFxtdHN0LWFwcC9zcmNcXGFwcFxccGFnZXNcXHByb2ZpbGUtcGFnZVxccHJvZmlsZS1wYWdlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLG9CQUFvQixFQUFBOztBQUl4QjtFQUNFLHFDQUFhLEVBQUE7O0FBR2Y7RUFDRSx3R0FDaUM7RUFDakMsNkNBQTZDO0VBQzdDLDhCQUE4QixFQUFBOztBQUpoQztJQU9JLGVBQWU7SUFDZixhQUFhO0lBQ2Isb0NBQW9DLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wcm9maWxlLXBhZ2UvcHJvZmlsZS1wYWdlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9maWxlIHtcclxuICBmb3JtIHtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xyXG4gIH1cclxufVxyXG5cclxuaW9uLWxpc3QtaGVhZGVyIHtcclxuICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1oZWFkZXIpO1xyXG59XHJcblxyXG4ucHJlbWl1bS1ub3RlIHtcclxuICBtYXJnaW46IGNhbGModmFyKC0tZGVmYXVsdC1tYXJnaW4pICogLTEpIGNhbGModmFyKC0tZGVmYXVsdC1tYXJnaW4pICogMilcclxuICAgIGNhbGModmFyKC0tZGVmYXVsdC1tYXJnaW4pICogMyk7XHJcbiAgYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXdhcm5pbmctbGlnaHRlc3QpO1xyXG4gIHBhZGRpbmc6IHZhcigtLWRlZmF1bHQtbWFyZ2luKTtcclxuICAvLyBib3JkZXI6IDRweCBzb2xpZCB2YXIoLS1pb24tY29sb3Itd2FybmluZyk7XHJcbiAgcCB7XHJcbiAgICBmb250LXNpemU6IDEycHQ7XHJcbiAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tZGVmYXVsdC1tYXJnaW4pO1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport {\r\n  TrainingLevels,\r\n  TransphormationGoal,\r\n  ActiveLevels,\r\n  OnboardingService,\r\n  TrainingProgramTypes, TrainingHomeWorkouts, Sex,\r\n} from '../../services/onboarding/onboarding.service';\r\nimport {\r\n  LoadingController, ModalController,\r\n  NavController,\r\n} from '@ionic/angular';\r\nimport { ErrorsService } from '../../services/errors/errors.service';\r\nimport { pick } from 'lodash';\r\nimport { Transphormer } from '../../services/authentication/authentication.service';\r\nimport { ToastService } from '../../services/toast-service/toast-service.service';\r\nimport { CustomMacrosComponent } from '../../components/nutrition/custom-macros/custom-macros.component';\r\nimport { NutritionCalculatorService } from '../../services/nutrition-calculator/nutrition-calculator.service';\r\nimport { AnalyticsService } from '../../services/analytics/analytics.service';\r\nimport { AnalyticEvents } from './../../services/analytics/analytic-events.enum';\r\n@Component({\r\n  selector: 'app-profile-page',\r\n  templateUrl: './profile-page.page.html',\r\n  styleUrls: ['./profile-page.page.scss'],\r\n})\r\nexport class ProfilePagePage implements OnInit {\r\n  @Output()\r\n  public complete: EventEmitter<undefined> = new EventEmitter();\r\n\r\n  public transphormer: Transphormer;\r\n  public form: FormGroup;\r\n  public trainingLevels = TrainingLevels;\r\n  public transphormationGoals = TransphormationGoal;\r\n  public activeLevels = ActiveLevels;\r\n  public programTypes = TrainingProgramTypes;\r\n  public is_free_user = false;\r\n  public homeWorkouts = TrainingHomeWorkouts;\r\n  public email = '';\r\n  public SexValues = Sex;\r\n\r\n  constructor(\r\n    private modal: ModalController,\r\n    private nutritionCalculatorService: NutritionCalculatorService,\r\n    private formBuilder: FormBuilder,\r\n    private onboardingService: OnboardingService,\r\n    private loadingCtrl: LoadingController,\r\n    private toastSvc: ToastService,\r\n    public errorService: ErrorsService,\r\n    private navCtrl: NavController,\r\n    private analyticService: AnalyticsService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      first_name: this.formBuilder.control('', [Validators.required]),\r\n      last_name: this.formBuilder.control('', [Validators.required]),\r\n      height: this.formBuilder.control('', [Validators.required]),\r\n      weight: this.formBuilder.control('', [Validators.required]),\r\n      goal_weight: this.formBuilder.control('', [Validators.required]),\r\n      date_of_birth: this.formBuilder.control('', [Validators.required]),\r\n      sex: this.formBuilder.control('', [Validators.required]),\r\n      activity_level: this.formBuilder.control('', [Validators.required]),\r\n      training_level: this.formBuilder.control('', [Validators.required]),\r\n      transphormation_goal: this.formBuilder.control('', [Validators.required]),\r\n      access_to_gym: this.formBuilder.control('', [Validators.required]),\r\n      likely_to_do: this.formBuilder.control('', [Validators.required]),\r\n      home_workout_selection: this.formBuilder.control(''),\r\n      gym_workout_selection: this.formBuilder.control(''),\r\n      meals_per_day: this.formBuilder.control(''),\r\n      preference_macro_counting: this.formBuilder.control(''),\r\n    });\r\n    this.fetchProfile();\r\n  }\r\n\r\n  protected goPremium() {\r\n    this.navCtrl.navigateRoot('subscription');\r\n  }\r\n\r\n  protected async fetchProfile() {\r\n    const loader = await this.loadingCtrl.create({\r\n      message: 'Please wait ...',\r\n    });\r\n    await loader.present();\r\n\r\n    try {\r\n      const transphormer = this.transphormer = <Transphormer>(\r\n        await this.onboardingService.fetchOnBoard()\r\n      );\r\n\r\n      for (const attribute in pick(\r\n        transphormer,\r\n        Object.keys(this.form.getRawValue())\r\n      )) {\r\n        if (transphormer.hasOwnProperty(attribute)) {\r\n          this.form.get(attribute).setValue(transphormer[attribute]);\r\n        }\r\n      }\r\n\r\n      this.form.get('date_of_birth').setValue(transphormer.dob);\r\n      this.is_free_user = !transphormer.is_paid_user;\r\n      this.email = transphormer.email;\r\n      this.form.valueChanges.subscribe(() => {\r\n        const values = this.form.getRawValue();\r\n        if (values.likely_to_do === 'Calorie / Macro counting' && this.is_free_user) {\r\n          values.likely_to_do = 'Portion control';\r\n        }\r\n        this.transphormer = Object.assign({}, this.transphormer, values);\r\n      });\r\n    } catch (e) {\r\n      this.toastSvc.flash(this.errorService.firstError(e));\r\n    } finally {\r\n      loader.dismiss();\r\n    }\r\n  }\r\n\r\n  public get isMacroCalorieCounting() {\r\n    if (!this.transphormer) {\r\n      return false;\r\n    }\r\n    return this.transphormer.is_paid_user && (this.form.get('likely_to_do').value === 'Calorie / Macro counting');\r\n  }\r\n\r\n  public async updateProfile() {\r\n    try {\r\n      const data = <Transphormer>this.form.getRawValue();\r\n      if (data.likely_to_do !== 'Macro meal plan') {\r\n        data.meals_per_day = 0;\r\n      }\r\n      await this.onboardingService.updateOnBoardInformation(data);\r\n      this.toastSvc.flash('Profile saved.');\r\n      this.analyticService.logEvent(AnalyticEvents.UpdatingProfile, {});\r\n    } catch (e) {\r\n      this.toastSvc.flash(this.errorService.firstError(e));\r\n    }\r\n  }\r\n\r\n  public goToWeighIn() {\r\n    this.navCtrl.navigateRoot('weight', {\r\n      animationDirection: 'forward',\r\n      animated: true\r\n    });\r\n  }\r\n\r\n  public getProgramType(value) {\r\n    return this.programTypes.find(programType => programType.value === value);\r\n  }\r\n\r\n  public get hasCustomMacros() {\r\n    if (!this.transphormer) {\r\n      return false;\r\n    }\r\n\r\n    return this.transphormer.custom_macros && !this.transphormer.custom_macros.reset_to_original;\r\n  }\r\n\r\n  /**\r\n   * Open modal for editing/creating custom macro\r\n   */\r\n  public async openCustomMacro() {\r\n    const bmrValues = this.nutritionCalculatorService.calculateAdvancedMacros(\r\n      +this.transphormer.latest_weight_value, +this.transphormer.goal_weight, this.transphormer.activity_level,\r\n      this.transphormer.transphormation_goal, this.transphormer.sex, this.transphormer.preference_macro_counting\r\n    );\r\n\r\n    const macroModal = await this.modal.create({\r\n      component: CustomMacrosComponent,\r\n      componentProps: {\r\n        originalMacro: bmrValues,\r\n      }\r\n    });\r\n\r\n    await macroModal.present();\r\n\r\n    const result = await macroModal.onDidDismiss();\r\n\r\n    if (result.data) {\r\n      const custom_macros = result.data;\r\n      this.transphormer = Object.assign({}, this.transphormer, { custom_macros });\r\n    }\r\n  }\r\n}\r\n","export enum AnalyticEvents {\r\n  ViewingWorkouts = 'viewing_workouts',\r\n  AddingWeightIn = 'adding_weigh_in',\r\n  LoggingNutrition = 'logging_nutrition',\r\n  MessagingWithTrainer = 'messaging_with_trainer',\r\n  WatchingLiveStream = 'watching_live_stream',\r\n  HelpView = 'help_view',\r\n  WorkoutHelp = 'workout_help',\r\n  SearchingAdvisor = 'searching_advisor',\r\n  DroppingAdvisor = 'dropping_advisor',\r\n  TakingPhotos = 'taking_photos',\r\n  ViewingAnnouncements = 'viewing_announcements',\r\n  UpdatingProfile = 'updating_profile',\r\n  ChangingConfiguration = 'changing_configuration'\r\n}\r\n"],"sourceRoot":""}