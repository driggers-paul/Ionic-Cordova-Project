{"version":3,"sources":["webpack:///./src/app/pages/my-transphormers/metrics/metrics.module.ts","webpack:///./src/app/pages/my-transphormers/metrics/metrics.page.html","webpack:///./src/app/pages/my-transphormers/metrics/metrics.page.scss","webpack:///./src/app/pages/my-transphormers/metrics/metrics.page.ts","webpack:///./src/app/services/trainer-transphormer/trainer-transphormer.service.ts"],"names":[],"mappings":"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","file":"pages-my-transphormers-metrics-metrics-module.js","sourcesContent":["import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { MetricsPage } from './metrics.page';\r\nimport { ChartModule } from '../../../components/chart/chart.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MetricsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ChartModule\r\n  ],\r\n  declarations: [MetricsPage],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class MetricsPageModule {\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>My Body Metrics</ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button default-href=\\\"/dashboard\\\" text=\\\"\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n\\r\\n  <div class=\\\"heading\\\" text-center margin-bottom *ngIf=\\\"weights.length > 1\\\">\\r\\n    {{ weights[weights.length - 1].weight }} lbs\\r\\n    <ion-icon name=\\\"arrow-round-forward\\\"></ion-icon>\\r\\n    {{ weights[0].weight }}lbs\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"heading\\\" *ngIf=\\\"weights.length === 1\\\">\\r\\n    {{ weights[0].weight }} lbs\\r\\n    <ion-icon name=\\\"arrow-round-forward\\\"></ion-icon>\\r\\n    {{ weights[0].weight }}lbs\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"heading\\\" margin-bottom *ngIf=\\\"weights.length === 0\\\">\\r\\n    No weigh-ins to see. Log one!\\r\\n  </div>\\r\\n\\r\\n  <app-chart margin-vertical [weights]=\\\"weights\\\"></app-chart>\\r\\n  <ion-list margin-top>\\r\\n    <ion-item *ngFor=\\\"let weight of weights; let i = index; let last = last\\\">\\r\\n      <ion-label>{{ weight.weight }} lbs <span class=\\\"diff\\\" *ngIf=\\\"!last\\\">({{ diffInWeight(i) }} {{ Math.abs(diffInWeight(i)) > 1 ? 'lbs' : 'lb'}})</span></ion-label>\\r\\n      <span class=\\\"time\\\">{{ weight.logged_on.fromNow() }}</span>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL215LXRyYW5zcGhvcm1lcnMvbWV0cmljcy9tZXRyaWNzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { DisplayWeight } from '../../body-metrics/body-metrics.page';\r\nimport { Weight } from '../../../services/weights/weights.service';\r\nimport * as moment from 'moment';\r\nimport { Moment } from 'moment';\r\nimport { ErrorsService } from '../../../services/errors/errors.service';\r\nimport { LoadingController, ToastController } from '@ionic/angular';\r\nimport { TrainerTransphormerService } from '../../../services/trainer-transphormer/trainer-transphormer.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-metrics',\r\n  templateUrl: './metrics.page.html',\r\n  styleUrls: ['./metrics.page.scss'],\r\n})\r\nexport class MetricsPage implements OnInit {\r\n  public weights: DisplayWeight[] = [];\r\n  public Math = Math;\r\n\r\n  constructor(public errorService: ErrorsService,\r\n              private loadingCtrl: LoadingController,\r\n              private toastCtrl: ToastController,\r\n              private trainerTransphormerService: TrainerTransphormerService,\r\n              private router: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setupWeights();\r\n  }\r\n\r\n  private async setupWeights() {\r\n    const loader = await this.loadingCtrl.create({\r\n      message: 'Please wait ...',\r\n    });\r\n    await loader.present();\r\n\r\n    try {\r\n      const weights = <Weight[]>await this.trainerTransphormerService\r\n        .transphormerWeights(parseFloat(this.router.snapshot.paramMap.get('id')));\r\n      const now = moment();\r\n\r\n      this.weights = weights.reduce((carry: DisplayWeight[], weight): DisplayWeight[] => {\r\n        const displayWeight = <DisplayWeight>weight;\r\n\r\n        if (now.diff(<Moment>displayWeight.logged_on, 'days') === 0) {\r\n          displayWeight.diffInDateAsReadable = 'Today';\r\n        } else if (now.diff(<Moment>displayWeight.logged_on, 'weeks') !== 0) {\r\n          displayWeight.diffInDateAsReadable = `${now.diff(\r\n            <Moment>displayWeight.logged_on,\r\n            'weeks',\r\n          )} weeks ago`;\r\n        } else {\r\n          displayWeight.diffInDateAsReadable = `${now.diff(\r\n            <Moment>displayWeight.logged_on,\r\n            'days',\r\n          )} days ago`;\r\n        }\r\n\r\n        carry.push(displayWeight);\r\n\r\n        return carry;\r\n      }, []);\r\n    } catch (e) {\r\n      const toast = await this.toastCtrl.create({\r\n        message: this.errorService.firstError(e),\r\n        duration: 3000,\r\n      });\r\n      await toast.present();\r\n    } finally {\r\n      loader.dismiss();\r\n    }\r\n  }\r\n\r\n  public diffInWeight(currentIndex): number {\r\n    if (currentIndex === this.weights.length - 1) {\r\n      return 0;\r\n    } else {\r\n      return (-1) * (this.weights[currentIndex + 1].weight - this.weights[currentIndex].weight);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseService } from '../base/base.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ErrorFormat } from '../errors/errors.service';\r\nimport { Transphormer } from '../authentication/authentication.service';\r\nimport { CameraPhotos } from '../camera/camera.service';\r\nimport { Weight } from '../weights/weights.service';\r\nimport * as moment from 'moment';\r\nimport { Platform } from '@ionic/angular';\r\nimport { MacroCountingInfo } from '../nutrition/nutrition.service';\r\n\r\nexport interface ListingParams extends Object {\r\n  activeDays: number | string;\r\n  uploadDays: number | string;\r\n  haveNotUploadDays: number | string;\r\n  joinedDays: number | string;\r\n  name: string;\r\n  customer_for_life?: boolean | '';\r\n  is_premium?: boolean | '';\r\n  not_messaged_in?: number | string;\r\n}\r\n\r\nexport interface PaginatedLinkedApplications {\r\n  data: Transphormer[];\r\n  total: number;\r\n  from: number;\r\n  to: number;\r\n  last_page: number;\r\n  current_page: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TrainerTransphormerService extends BaseService {\r\n  constructor(protected http: HttpClient, protected platform: Platform) {\r\n    super(http, platform);\r\n    TrainerTransphormerService.SET_PLATFORM(platform);\r\n  }\r\n\r\n  public transphormers(\r\n    params: ListingParams | null = null, page: number = 1, perPage: number = 100,\r\n  ): Promise<PaginatedLinkedApplications | ErrorFormat> {\r\n\r\n    const options = TrainerTransphormerService.BaseOptions() as any;\r\n    options.params = params ? Object.assign({}, params) : {};\r\n    options.params.perPage = perPage.toString();\r\n    options.params.page = page.toString();\r\n\r\n    return this.http\r\n      .get<PaginatedLinkedApplications>(\r\n        TrainerTransphormerService.Url('trainer/transphormer'),\r\n        options as {}\r\n      )\r\n      .toPromise()\r\n      .catch(TrainerTransphormerService.HandleError);\r\n  }\r\n\r\n  public transphormer(id: number): Promise<Transphormer | ErrorFormat> {\r\n    return this.http\r\n      .get<Transphormer>(\r\n        TrainerTransphormerService.Url(`trainer/transphormer/${id}`),\r\n        TrainerTransphormerService.BaseOptions(),\r\n      )\r\n      .toPromise()\r\n      .catch(TrainerTransphormerService.HandleError);\r\n  }\r\n\r\n  public transphormerPhotos(transphormerId: number): Promise<CameraPhotos[] | ErrorFormat> {\r\n    return this.http.get<CameraPhotos[]>(TrainerTransphormerService.Url(`trainer/transphormer/${transphormerId}/camera`),\r\n      TrainerTransphormerService.BaseOptions())\r\n      .toPromise()\r\n      .catch(TrainerTransphormerService.HandleError);\r\n  }\r\n\r\n  public transphormerWeights(transphormerId: number): Promise<Weight[] | ErrorFormat> {\r\n    return this.http.get<Weight[]>(TrainerTransphormerService.Url(`trainer/transphormer/${transphormerId}/weigh-ins`),\r\n      TrainerTransphormerService.BaseOptions())\r\n      .toPromise()\r\n      .then(weights => weights.map(weight => this.loggedDateConversion(weight)))\r\n      .catch(TrainerTransphormerService.HandleError);\r\n  }\r\n\r\n  public trackedItems(transphormerId: number, from?: string, to?: string): Promise<MacroCountingInfo[] | ErrorFormat> {\r\n    let url = `trainer/transphormer/${transphormerId}/tracked-items`;\r\n    const opts = [];\r\n    if (from) {\r\n      opts.push('from=' + escape(from));\r\n    }\r\n    if (to) {\r\n      opts.push('to=' + escape(to));\r\n    }\r\n    if (opts.length > 0) {\r\n      url += '?' + opts.join('&');\r\n    }\r\n    return this.http.get<MacroCountingInfo[]>(TrainerTransphormerService.Url(url),\r\n      TrainerTransphormerService.BaseOptions())\r\n      .toPromise()\r\n      .catch(TrainerTransphormerService.HandleError);\r\n  }\r\n\r\n  /**\r\n   * Converts logged date string value to date value\r\n   * @param weight\r\n   */\r\n  private loggedDateConversion(weight: Weight): Weight {\r\n    weight.logged_on = moment(weight.logged_on, 'YYYY-MM-DD HH:mm:ss', true);\r\n    return weight;\r\n  }\r\n}\r\n"],"sourceRoot":""}