{"version":3,"sources":["webpack:///./src/app/services/custom-macro/custom-macro.service.ts","webpack:///./src/app/services/errors/errors.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA2C;AACQ;AACD;AACwB;AAGzC;AAiBjC;IAAwC,sCAAW;IAEjD,4BACS,IAAgB,EACb,QAAkB,EACrB,SAA0B,EAC1B,OAAsB;QAJ/B,YAME,kBAAM,IAAI,EAAE,QAAQ,CAAC,SACtB;QANQ,UAAI,GAAJ,IAAI,CAAY;QACb,cAAQ,GAAR,QAAQ,CAAU;QACrB,eAAS,GAAT,SAAS,CAAiB;QAC1B,aAAO,GAAP,OAAO,CAAe;;IAG/B,CAAC;2BATU,kBAAkB;IAW7B;;OAEG;IACI,oCAAO,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,oBAAkB,CAAC,GAAG,CAAC,0BAA0B,CAAC,EAClD,oBAAkB,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAC3C;aACE,SAAS,EAAE;aACX,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,GAAG,CAAC,eAAK;YAC9B,KAAK,CAAC,SAAS,GAAG,mCAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAC1C,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,EAHc,CAGd,CAAC;aACF,KAAK,CAAC,oBAAkB,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED;;;;;;;;OAQG;IACI,mCAAM,GAAb,UACE,iBAA0B,EAAE,OAAe,EAAE,KAAa,EAAE,IAAY,EAAE,IAAY;QAEtF,IAAM,IAAI,GAAG;YACX,iBAAiB;YACjB,KAAK;YACL,IAAI;YACJ,OAAO;YACP,IAAI;SACL,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAc,oBAAkB,CAAC,GAAG,CAAC,0BAA0B,CAAC,EAAE,IAAI,EAAE,oBAAkB,CAAC,WAAW,EAAE,CAAC;aAC3H,SAAS,EAAE;aACX,IAAI,CAAC,gBAAM;YACV,MAAM,CAAC,SAAS,GAAG,mCAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC5C,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC;aACD,KAAK,CAAC,oBAAkB,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED;;;;;;;OAOG;IACI,mCAAM,GAAb,UACE,EAAU,EAAE,iBAA0B,EAAE,OAAe,EAAE,KAAa,EAAE,IAAY;QAEpF,IAAM,IAAI,GAAG;YACX,iBAAiB;YACjB,KAAK;YACL,IAAI;YACJ,OAAO;SACR,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CACpB,oBAAkB,CAAC,GAAG,CAAC,8BAA4B,EAAI,CAAC,EAAE,IAAI,EAAE,oBAAkB,CAAC,WAAW,EAAE,CACjG;aACE,SAAS,EAAE;aACX,IAAI,CAAC,gBAAM;YACV,MAAM,CAAC,SAAS,GAAG,mCAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC5C,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC;aACD,KAAK,CAAC,oBAAkB,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED;;OAEG;IACI,wCAAW,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,oBAAkB,CAAC,GAAG,CAAC,iCAAiC,CAAC,EAAE,oBAAkB,CAAC,WAAW,EAAE,CAC5F;aACE,SAAS,EAAE;aACX,IAAI,CAAqB,gBAAM;YAC9B,IAAI,MAAM,CAAC,EAAE,EAAE;gBACb,MAAM,CAAC,SAAS,GAAG,mCAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAC5C,OAAO,MAAM,CAAC;aACf;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;QACH,CAAC,CAAC;aACD,KAAK,CAAC,oBAAkB,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAEY,gDAAmB,GAAhC,UAAiC,SAAiB,EAAE,iBAAiB;;;;;;;wBAC7D,IAAI,GAAG,SAAS,GAAG,iBAAiB,CAAC;6BACvC,KAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAnB,wBAAmB;wBACU,qBAAM,IAAI,CAAC,WAAW,EAAE;;wBAAnD,WAAW,GAAgB,SAAwB;wBACvD,WAAW,GAAG,WAAW,IAAiB,EAAC,iBAAiB,EAAE,IAAI,EAAC,CAAC;wBAE9D,YAAY,GAAiB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;6BAEvF,EAAC,WAAW,CAAC,iBAAiB,IAAI,YAAY,CAAC,YAAY,KAAK,0BAA0B,GAA1F,wBAA0F;wBAC9E,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCACxC,MAAM,EAAE,mBAAmB;gCAC3B,OAAO,EAAE,eAAY,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,4DAAwD;gCACzG,eAAe,EAAE,KAAK;gCACtB,OAAO,EAAE,CAAC;wCACR,IAAI,EAAE,QAAQ;wCACd,QAAQ,EAAE,eAAe;qCAC1B,EAAE;wCACD,IAAI,EAAE,QAAQ;wCACd,OAAO,EAAE;4CACP,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,4BAA4B,CAAC,CAAC;wCAC1D,CAAC;qCACF,CAAC;6BACH,CAAC;;wBAbI,UAAQ,SAaZ;wBAEF,qBAAM,OAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;;KAG3B;;IAjIU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIe,+DAAU;YACH,uDAAQ;YACV,8DAAe;YACjB,4DAAa;OANpB,kBAAkB,CAkI9B;IAAD,yBAAC;CAAA,CAlIuC,8DAAW,GAkIlD;AAlI8B;;;;;;;;;;;;;;;;;;;;;;;;;ACvBY;AAiB3C;IAEE;IACA,CAAC;IAED,mCAAmC;IAC5B,kCAAU,GAAjB,UAAkB,IAAmC;QACnD,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YAC/B,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,OAAO,EAAE;YACvB,OAAO,QAAQ,CAAC;SACjB;aAAM;YACL,OAAO,MAAM,CAAC;SACf;IACH,CAAC;IAED,mCAAmC;IACnC;;;;OAIG;IACI,kCAAU,GAAjB,UAAkB,MAAmB;QACnC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,EAAE,CAAC;SACX;QAED,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACtC,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IAED,mCAAmC;IACnC;;;;OAIG;IACI,mCAAW,GAAlB,UAAmB,GAAW,EAAE,MAAmB;QACjD,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,EAAE,CAAC;SACX;QACD,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;YACnC,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACzB;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,mCAAmC;IACnC;;;;OAIG;IACI,wCAAgB,GAAvB,UAAwB,GAAW,EAAE,MAAmB;QACtD,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,EAAE,CAAC;SACX;QAED,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;YACnC,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/B,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAC5B;SACF;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,mCAAmC;IACnC;;;;OAIG;IACI,mCAAW,GAAlB,UAAmB,GAAW,EAAE,MAAmB;QAEjD,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,KAAK,CAAC;SACd;QAED,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;YACnC,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;SACpC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED,mCAAmC;IACnC;;;OAGG;IACI,gCAAQ,GAAf,UAAgB,MAAmB;QAEjC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,KAAK,CAAC;SACd;QAED,KAAK,IAAM,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE;YAC7B,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/B,OAAO,IAAI,CAAC;aACb;SACF;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;;OAGG;IACI,8BAAM,GAAb,UAAc,MAAmB;QAC/B,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,CAAC,CAAC,CAAC;SACX;QACD,OAAO,MAAM,CAAC,MAAM,CAAC;IACvB,CAAC;IAEM,+CAAuB,GAA9B,UAA+B,KAAwB,EAAE,cAA8B;QAA9B,sDAA8B;QACrF,IAAM,SAAS,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;QAEtF,IAAI,cAAc,IAAI,SAAS,KAAK,KAAK,EAAE;YACzC,MAAM,KAAK,CAAC;SACb;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IA9HU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,aAAa,CA+HzB;IAAD,oBAAC;CAAA;AA/HyB","file":"default~pages-custom-food-template-custom-food-template-module~pages-dashboard-dashboard-module~page~da8103c7.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BaseService } from '../base/base.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AlertController, NavController, Platform } from '@ionic/angular';\r\nimport { Moment } from 'moment';\r\nimport { ErrorFormat } from '../errors/errors.service';\r\nimport * as moment from 'moment';\r\nimport { Transphormer } from '../authentication/authentication.service';\r\n\r\nexport interface CustomMacro {\r\n  id: number;\r\n  reset_to_original: boolean;\r\n  carbs: number;\r\n  fats: number;\r\n  protein: number;\r\n  calories: number;\r\n  transphormer_id: number;\r\n  edit_date: Moment | string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomMacroService extends BaseService {\r\n\r\n  constructor(\r\n    public http: HttpClient,\r\n    protected platform: Platform,\r\n    public alertCtrl: AlertController,\r\n    public navCtrl: NavController\r\n  ) {\r\n    super(http, platform);\r\n  }\r\n\r\n  /**\r\n   * Returns list of previously created macros\r\n   */\r\n  public history(): Promise<CustomMacro[] | ErrorFormat> {\r\n    return this.http.get<CustomMacro[]>(\r\n      CustomMacroService.Url('nutritions/custom-macros'),\r\n      CustomMacroService.BaseOptions(true, true)\r\n    )\r\n      .toPromise()\r\n      .then(result => result.map(macro => {\r\n        macro.edit_date = moment(macro.edit_date);\r\n        return macro;\r\n      }))\r\n      .catch(CustomMacroService.HandleError);\r\n  }\r\n\r\n  /**\r\n   * Creates new custom macro record\r\n   *\r\n   * @param reset_to_original\r\n   * @param protein\r\n   * @param carbs\r\n   * @param fats\r\n   * @param date\r\n   */\r\n  public create(\r\n    reset_to_original: boolean, protein: number, carbs: number, fats: number, date: string\r\n  ): Promise<CustomMacro | ErrorFormat> {\r\n    const data = {\r\n      reset_to_original,\r\n      carbs,\r\n      fats,\r\n      protein,\r\n      date\r\n    };\r\n    return this.http.post<CustomMacro>(CustomMacroService.Url('nutritions/custom-macros'), data, CustomMacroService.BaseOptions())\r\n      .toPromise()\r\n      .then(result => {\r\n        result.edit_date = moment(result.edit_date);\r\n        return result;\r\n      })\r\n      .catch(CustomMacroService.HandleError);\r\n  }\r\n\r\n  /**\r\n   * Action to update existing custom macro record\r\n   * @param id\r\n   * @param reset_to_original\r\n   * @param protein\r\n   * @param carbs\r\n   * @param fats\r\n   */\r\n  public update(\r\n    id: number, reset_to_original: boolean, protein: number, carbs: number, fats: number\r\n  ): Promise<CustomMacro | ErrorFormat> {\r\n    const data = {\r\n      reset_to_original,\r\n      carbs,\r\n      fats,\r\n      protein\r\n    };\r\n    return this.http.patch<CustomMacro>(\r\n      CustomMacroService.Url(`nutritions/custom-macros/${id}`), data, CustomMacroService.BaseOptions()\r\n    )\r\n      .toPromise()\r\n      .then(result => {\r\n        result.edit_date = moment(result.edit_date);\r\n        return result;\r\n      })\r\n      .catch(CustomMacroService.HandleError);\r\n  }\r\n\r\n  /**\r\n   * Returns the latest custom macro\r\n   */\r\n  public latestMacro(): Promise<CustomMacro | null | ErrorFormat> {\r\n    return this.http.get<CustomMacro | null>(\r\n      CustomMacroService.Url('nutritions/custom-macros/latest'), CustomMacroService.BaseOptions()\r\n    )\r\n      .toPromise()\r\n      .then<CustomMacro | null>(result => {\r\n        if (result.id) {\r\n          result.edit_date = moment(result.edit_date);\r\n          return result;\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n      .catch(CustomMacroService.HandleError);\r\n  }\r\n\r\n  public async notifyToUpdateMacro(newWeight: number, comparisionWeight) {\r\n    const diff = newWeight - comparisionWeight;\r\n    if (Math.abs(diff) > 10) {\r\n      let latestMacro = <CustomMacro>await this.latestMacro();\r\n      latestMacro = latestMacro || <CustomMacro>{reset_to_original: true};\r\n\r\n      const transphormer: Transphormer = JSON.parse(window.localStorage.getItem('transphormer'));\r\n\r\n      if (!latestMacro.reset_to_original && transphormer.likely_to_do === 'Calorie / Macro counting') {\r\n        const alert = await this.alertCtrl.create({\r\n          header: 'Update your macro',\r\n          message: `You have ${diff > 0 ? 'gained' : 'lost'} 10 pounds or more. Please update your macro settings.`,\r\n          backdropDismiss: false,\r\n          buttons: [{\r\n            text: 'Cancel',\r\n            cssClass: 'global-danger',\r\n          }, {\r\n            text: 'Update',\r\n            handler: () => {\r\n              this.navCtrl.navigateRoot('macro?openCustomMacro=true');\r\n            }\r\n          }]\r\n        });\r\n\r\n        await alert.present();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, FormControl } from '@angular/forms';\r\n\r\ntype StateColors = 'dark' | 'danger' | 'warning';\r\n\r\nexport interface ErrorFormat {\r\n  status: number;\r\n  list: ErrorList;\r\n}\r\n\r\nexport interface ErrorList {\r\n  [key: string]: string[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorsService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  public stateColor(item: FormControl | AbstractControl): StateColors {\r\n    if (item.invalid && !item.dirty) {\r\n      return 'dark';\r\n    } else if (item.invalid) {\r\n      return 'danger';\r\n    } else {\r\n      return 'dark';\r\n    }\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the first error key with first value in the error object\r\n   * @param errors\r\n   * @return string\r\n   */\r\n  public firstError(errors: ErrorFormat): string {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return '';\r\n    }\r\n\r\n    const keys = Object.keys(errors.list);\r\n    return errors.list[keys[0]][0];\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the errors for the key\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public errorForKey(key: string, errors: ErrorFormat): string[] {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return [];\r\n    }\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      return errors.list[key];\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the first error value for the given key\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public firstErrorForKey(key: string, errors: ErrorFormat): string {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return '';\r\n    }\r\n\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      if (errors.list[key].length > 0) {\r\n        return errors.list[key][0];\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Checks whether the given key has any errors\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public keyHasError(key: string, errors: ErrorFormat): boolean {\r\n\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return false;\r\n    }\r\n\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      return errors.list[key].length > 0;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Checks whether the given key has any errors\r\n   * @param errors\r\n   */\r\n  public hasError(errors: ErrorFormat): boolean {\r\n\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return false;\r\n    }\r\n\r\n    for (const key in errors.list) {\r\n      if (errors.list[key].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Returns the error status value\r\n   * @param errors\r\n   */\r\n  public status(errors: ErrorFormat): number {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return -1;\r\n    }\r\n    return errors.status;\r\n  }\r\n\r\n  public checkIsCorrectStructure(error: any | ErrorFormat, throwException: boolean = true): boolean {\r\n    const isCorrect = !(!error.hasOwnProperty('status') || !error.hasOwnProperty('list'));\r\n\r\n    if (throwException && isCorrect === false) {\r\n      throw error;\r\n    }\r\n\r\n    return isCorrect;\r\n  }\r\n}\r\n"],"sourceRoot":""}