{"version":3,"sources":["webpack:///./src/app/pages/change-password/change-password.module.ts","webpack:///./src/app/pages/change-password/change-password.page.html","webpack:///./src/app/pages/change-password/change-password.page.scss","webpack:///./src/app/pages/change-password/change-password.page.ts","webpack:///./src/app/services/errors/errors.service.ts","webpack:///./src/app/services/profile/profile.service.ts"],"names":[],"mappings":"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","file":"pages-change-password-change-password-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ChangePasswordPage } from './change-password.page';\r\nimport { LogoModule } from '../../components/logo/logo.module';\r\nimport { SideMenuModule } from '../../components/side-menu/side-menu.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ChangePasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    LogoModule,\r\n    ReactiveFormsModule,\r\n    SideMenuModule\r\n  ],\r\n  declarations: [ChangePasswordPage]\r\n})\r\nexport class ChangePasswordPageModule {\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <app-menu-button></app-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Change Password</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <app-logo></app-logo>\\r\\n  <div>\\r\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n      <ion-item>\\r\\n        <ion-input type=\\\"password\\\" placeholder=\\\"Old Password\\\" formControlName=\\\"old_password\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-input type=\\\"password\\\" placeholder=\\\"New Password\\\" formControlName=\\\"password\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-input type=\\\"password\\\" placeholder=\\\"Confirm Password\\\" formControlName=\\\"password_confirmation\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <div class=\\\"global-center-btn global-margin-top-15\\\">\\r\\n        <ion-button type=\\\"submit\\\" expand=\\\"full\\\">RESET PASSWORD</ion-button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\"","module.exports = \".logo {\\n  width: 150px;\\n  margin: 0 auto; }\\n\\nion-input {\\n  font-size: 12px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY2hhbmdlLXBhc3N3b3JkL0U6XFxpb25pY1xcVmVydmVDb21tZXJjZVxcTmV3RGV2XFxtdHN0LWFwcC9zcmNcXGFwcFxccGFnZXNcXGNoYW5nZS1wYXNzd29yZFxcY2hhbmdlLXBhc3N3b3JkLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7RUFDWixjQUFjLEVBQUE7O0FBR2hCO0VBQ0UsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9nbyB7XHJcbiAgd2lkdGg6IDE1MHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcblxyXG5pb24taW5wdXQge1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ErrorsService } from '../../services/errors/errors.service';\r\nimport { ProfileService } from '../../services/profile/profile.service';\r\nimport {\r\n  LoadingController,\r\n  NavController,\r\n  ToastController,\r\n} from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.page.html',\r\n  styleUrls: ['./change-password.page.scss'],\r\n})\r\nexport class ChangePasswordPage implements OnInit {\r\n  public form: FormGroup;\r\n\r\n  constructor(\r\n    public errorService: ErrorsService,\r\n    protected profileService: ProfileService,\r\n    private toastCtrl: ToastController,\r\n    private loadingCtrl: LoadingController,\r\n    public navCtrl: NavController\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      old_password: new FormControl('', [Validators.required]),\r\n      password: new FormControl('', [Validators.required]),\r\n      password_confirmation: new FormControl('', [Validators.required]),\r\n    });\r\n  }\r\n\r\n  public async submit() {\r\n    const loader = await this.loadingCtrl.create({\r\n      message: 'Please wait ...',\r\n    });\r\n    await loader.present();\r\n\r\n    try {\r\n      const data = this.form.getRawValue();\r\n      await this.profileService.changePassword(\r\n        data.old_password,\r\n        data.password,\r\n        data.password_confirmation\r\n      );\r\n\r\n      const toast = await this.toastCtrl.create({\r\n        message: 'Password changed successfully',\r\n        duration: 3000,\r\n      });\r\n      await toast.present();\r\n\r\n      this.form.reset();\r\n      this.navCtrl.navigateRoot('/dashboard');\r\n    } catch (e) {\r\n      const toast = await this.toastCtrl.create({\r\n        message: this.errorService.firstError(e),\r\n        duration: 3000,\r\n      });\r\n      await toast.present();\r\n    } finally {\r\n      loader.dismiss();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, FormControl } from '@angular/forms';\r\n\r\ntype StateColors = 'dark' | 'danger' | 'warning';\r\n\r\nexport interface ErrorFormat {\r\n  status: number;\r\n  list: ErrorList;\r\n}\r\n\r\nexport interface ErrorList {\r\n  [key: string]: string[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorsService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  public stateColor(item: FormControl | AbstractControl): StateColors {\r\n    if (item.invalid && !item.dirty) {\r\n      return 'dark';\r\n    } else if (item.invalid) {\r\n      return 'danger';\r\n    } else {\r\n      return 'dark';\r\n    }\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the first error key with first value in the error object\r\n   * @param errors\r\n   * @return string\r\n   */\r\n  public firstError(errors: ErrorFormat): string {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return '';\r\n    }\r\n\r\n    const keys = Object.keys(errors.list);\r\n    return errors.list[keys[0]][0];\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the errors for the key\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public errorForKey(key: string, errors: ErrorFormat): string[] {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return [];\r\n    }\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      return errors.list[key];\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the first error value for the given key\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public firstErrorForKey(key: string, errors: ErrorFormat): string {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return '';\r\n    }\r\n\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      if (errors.list[key].length > 0) {\r\n        return errors.list[key][0];\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Checks whether the given key has any errors\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public keyHasError(key: string, errors: ErrorFormat): boolean {\r\n\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return false;\r\n    }\r\n\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      return errors.list[key].length > 0;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Checks whether the given key has any errors\r\n   * @param errors\r\n   */\r\n  public hasError(errors: ErrorFormat): boolean {\r\n\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return false;\r\n    }\r\n\r\n    for (const key in errors.list) {\r\n      if (errors.list[key].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Returns the error status value\r\n   * @param errors\r\n   */\r\n  public status(errors: ErrorFormat): number {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return -1;\r\n    }\r\n    return errors.status;\r\n  }\r\n\r\n  public checkIsCorrectStructure(error: any | ErrorFormat, throwException: boolean = true): boolean {\r\n    const isCorrect = !(!error.hasOwnProperty('status') || !error.hasOwnProperty('list'));\r\n\r\n    if (throwException && isCorrect === false) {\r\n      throw error;\r\n    }\r\n\r\n    return isCorrect;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseService } from '../base/base.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ErrorFormat } from '../errors/errors.service';\r\nimport { Platform } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService extends BaseService {\r\n  constructor(protected http: HttpClient, protected platform: Platform) {\r\n    super(http, platform);\r\n    ProfileService.SET_PLATFORM(platform);\r\n  }\r\n\r\n  public changePassword(\r\n    old_password: string,\r\n    password: string,\r\n    password_confirmation: string\r\n  ): Promise<any | ErrorFormat> {\r\n    const data = {\r\n      password,\r\n      old_password,\r\n      password_confirmation\r\n    };\r\n    return this.http\r\n      .post<any>(ProfileService.Url('change-password'), data, ProfileService.BaseOptions(true))\r\n      .toPromise()\r\n      .catch(ProfileService.HandleError);\r\n  }\r\n}\r\n"],"sourceRoot":""}