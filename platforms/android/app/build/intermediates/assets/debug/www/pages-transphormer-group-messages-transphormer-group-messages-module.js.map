{"version":3,"sources":["webpack:///./src/app/pages/transphormer-group-messages/transphormer-group-messages.module.ts","webpack:///./src/app/pages/transphormer-group-messages/transphormer-group-messages.page.html","webpack:///./src/app/pages/transphormer-group-messages/transphormer-group-messages.page.scss","webpack:///./src/app/pages/transphormer-group-messages/transphormer-group-messages.page.ts","webpack:///./src/app/services/errors/errors.service.ts"],"names":[],"mappings":"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","file":"pages-transphormer-group-messages-transphormer-group-messages-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TransphormerGroupMessagesPage } from './transphormer-group-messages.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TransphormerGroupMessagesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [TransphormerGroupMessagesPage]\r\n})\r\nexport class TransphormerGroupMessagesPageModule {\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button default-href=\\\"dashboard\\\" text=\\\"\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Group Messages</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <ion-list>\\r\\n    <ion-item (click)=\\\"goToTransphormerGroupChat(group)\\\" *ngFor=\\\"let group of groups\\\">\\r\\n      <ion-avatar large slot=\\\"start\\\">\\r\\n        <ion-icon name=\\\"contact\\\" size=\\\"large\\\"></ion-icon>\\r\\n      </ion-avatar>\\r\\n      <ion-label>\\r\\n        <h2>Advisor: {{ trainer(group).first_name }} {{ trainer(group).last_name }}</h2>\\r\\n        <h3>Transphormer Counts: {{ transphormerCount(group) }}</h3>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RyYW5zcGhvcm1lci1ncm91cC1tZXNzYWdlcy90cmFuc3Bob3JtZXItZ3JvdXAtbWVzc2FnZXMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  LoadingController,\r\n  NavController,\r\n  ToastController,\r\n} from '@ionic/angular';\r\nimport { ErrorsService } from '../../services/errors/errors.service';\r\nimport {\r\n  GroupParticipants,\r\n  MessageService,\r\n} from '../../services/message/message.service';\r\nimport { Transphormer } from '../../services/authentication/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-transphormer-group-messages',\r\n  templateUrl: './transphormer-group-messages.page.html',\r\n  styleUrls: ['./transphormer-group-messages.page.scss'],\r\n})\r\nexport class TransphormerGroupMessagesPage implements OnInit {\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    public errorService: ErrorsService,\r\n    private toastCtrl: ToastController,\r\n    private loadingCtrl: LoadingController,\r\n    private messageService: MessageService\r\n  ) {\r\n  }\r\n\r\n  public groups: GroupParticipants[] = [];\r\n\r\n  ngOnInit() {\r\n    this.setupGroups();\r\n  }\r\n\r\n  public goToTransphormerGroupChat(group: GroupParticipants) {\r\n    this.navCtrl.navigateForward(`group-messages/${group.group_name}`);\r\n  }\r\n\r\n  public async setupGroups() {\r\n    const loader = await this.loadingCtrl.create({\r\n      message: 'Please wait ...',\r\n    });\r\n    await loader.present();\r\n\r\n    try {\r\n      this.groups = <GroupParticipants[]>await this.messageService.userGroups();\r\n    } catch (e) {\r\n      const toast = await this.toastCtrl.create({\r\n        message: this.errorService.firstError(e),\r\n        duration: 3000,\r\n      });\r\n\r\n      await toast.present();\r\n    } finally {\r\n      loader.dismiss();\r\n    }\r\n  }\r\n\r\n  public transphormerCount(group: GroupParticipants): number {\r\n    return group.group.filter(grp => !grp.is_trainer).length;\r\n  }\r\n\r\n  public trainer(group: GroupParticipants): Transphormer {\r\n    return group.group.find(grp => grp.is_trainer).transphormer;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, FormControl } from '@angular/forms';\r\n\r\ntype StateColors = 'dark' | 'danger' | 'warning';\r\n\r\nexport interface ErrorFormat {\r\n  status: number;\r\n  list: ErrorList;\r\n}\r\n\r\nexport interface ErrorList {\r\n  [key: string]: string[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorsService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  public stateColor(item: FormControl | AbstractControl): StateColors {\r\n    if (item.invalid && !item.dirty) {\r\n      return 'dark';\r\n    } else if (item.invalid) {\r\n      return 'danger';\r\n    } else {\r\n      return 'dark';\r\n    }\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the first error key with first value in the error object\r\n   * @param errors\r\n   * @return string\r\n   */\r\n  public firstError(errors: ErrorFormat): string {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return '';\r\n    }\r\n\r\n    const keys = Object.keys(errors.list);\r\n    return errors.list[keys[0]][0];\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the errors for the key\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public errorForKey(key: string, errors: ErrorFormat): string[] {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return [];\r\n    }\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      return errors.list[key];\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Returns the first error value for the given key\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public firstErrorForKey(key: string, errors: ErrorFormat): string {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return '';\r\n    }\r\n\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      if (errors.list[key].length > 0) {\r\n        return errors.list[key][0];\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Checks whether the given key has any errors\r\n   * @param key\r\n   * @param errors\r\n   */\r\n  public keyHasError(key: string, errors: ErrorFormat): boolean {\r\n\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return false;\r\n    }\r\n\r\n    if (errors.list.hasOwnProperty(key)) {\r\n      return errors.list[key].length > 0;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // noinspection JSMethodCanBeStatic\r\n  /**\r\n   * Checks whether the given key has any errors\r\n   * @param errors\r\n   */\r\n  public hasError(errors: ErrorFormat): boolean {\r\n\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return false;\r\n    }\r\n\r\n    for (const key in errors.list) {\r\n      if (errors.list[key].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Returns the error status value\r\n   * @param errors\r\n   */\r\n  public status(errors: ErrorFormat): number {\r\n    if (!this.checkIsCorrectStructure(errors)) {\r\n      return -1;\r\n    }\r\n    return errors.status;\r\n  }\r\n\r\n  public checkIsCorrectStructure(error: any | ErrorFormat, throwException: boolean = true): boolean {\r\n    const isCorrect = !(!error.hasOwnProperty('status') || !error.hasOwnProperty('list'));\r\n\r\n    if (throwException && isCorrect === false) {\r\n      throw error;\r\n    }\r\n\r\n    return isCorrect;\r\n  }\r\n}\r\n"],"sourceRoot":""}